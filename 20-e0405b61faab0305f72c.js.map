{"version":3,"sources":["webpack:///./node_modules/@sanity/block-content-to-hyperscript/internals.js","webpack:///./node_modules/@sanity/block-content-to-hyperscript/lib/getImageUrl.js","webpack:///./node_modules/@sanity/block-content-to-hyperscript/lib/mergeSerializers.js","webpack:///./node_modules/@sanity/block-content-to-react/lib/BlockContent.js","webpack:///./node_modules/@sanity/block-content-to-hyperscript/lib/internals.js","webpack:///./node_modules/@sanity/block-content-to-hyperscript/lib/serializers.js","webpack:///./node_modules/@sanity/generate-help-url/index.js","webpack:///./node_modules/@sanity/image-url/index.js","webpack:///./node_modules/@sanity/image-url/lib/builder.js","webpack:///./node_modules/@sanity/image-url/lib/urlForImage.js","webpack:///./node_modules/@sanity/image-url/lib/parseSource.js","webpack:///./node_modules/@sanity/image-url/lib/parseAssetId.js","webpack:///./node_modules/@sanity/block-content-to-hyperscript/lib/blocksToNodes.js","webpack:///./node_modules/@sanity/block-content-to-hyperscript/lib/buildMarksTree.js","webpack:///./node_modules/@sanity/block-content-to-hyperscript/lib/nestLists.js","webpack:///./node_modules/@sanity/block-content-to-hyperscript/lib/generateKeys.js","webpack:///./node_modules/@sanity/block-content-to-react/lib/targets/dom.js"],"names":["module","exports","__webpack_require__","generateHelpUrl","urlBuilder","objectAssign","enc","encodeURIComponent","materializeError","props","node","options","projectId","dataset","asset","Error","url","query","imageOptions","keys","Object","length","map","key","join","getQueryString","_ref","image","toString","_typeof","Symbol","iterator","obj","constructor","prototype","defaultSerializers","userSerializers","reduce","acc","type","React","PropTypes","internals","_require","serializers","serializeSpan","renderProps","getImageUrl","blocksToNodes","mergeSerializers","renderNode","createElement","SanityBlockContent","customSerializers","blockProps","assign","blocks","propTypes","className","string","renderContainerOnSingleChild","bool","object","shape","types","marks","list","func","listItem","block","span","oneOfType","arrayOf","_type","isRequired","defaultProps","getSerializers","_blocksToNodes","h","serializerOpts","serializeOptions","useDashedStyles","RawMarkSerializer","tag","children","style","test","img","src","isInline","strong","bind","em","code","underline","text-decoration","textDecoration","strike-through","link","href","mark","blockType","serializer","_props$node","markType","console","warn","markFallback","hardBreak","container","text","undefined","empty","index","child","i","serializeNode","serializedNode","_key","slug","default","defineProperty","value","clientConfig","ImageUrlBuilder","baseUrl","apiHost","replace","_urlForImage","__esModule","_defineProperty","enumerable","configurable","writable","_defineProperties","target","descriptor","validFits","validCrops","parent","instance","Constructor","TypeError","_classCallCheck","this","arguments","source","ownKeys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","forEach","_objectSpread","protoProps","staticProps","withOptions","_dataset","_projectId","_bg","bg","_width","width","_height","height","x","y","focalPoint","_maxWidth","maxWidth","_minWidth","minWidth","_maxHeight","maxHeight","_minHeight","minHeight","_blur","blur","_sharpen","sharpen","left","top","rect","_format","format","_invert","invert","_orientation","orientation","_quality","quality","download","flipHorizontal","flipVertical","ignoreImageParams","indexOf","fit","crop","spec","_parseSource","_parseAssetId","_id","Math","round","right","bottom","hotSpotVerticalRadius","hotspot","hotSpotHorizontalRadius","hotSpotCenterX","hotSpotCenterY","result","desiredAspectRatio","_top","hotspotXCenter","_left","max","floor","cdnUrl","filename","id","params","isEffectiveCrop","push","SPEC_NAME_TO_URL_NAME_MAPPINGS","mapping","arr","_mapping","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","_s","_i","next","done","err","_iterableToArrayLimit","_nonIterableRest","specName","param","specToImageUrl","get","_interopRequireDefault","urlToId","parts","split","slice","applyDefaults","_slicedToArray","ref","_ref$split2","dimensionString","example","_dimensionString$spli2","imgWidthStr","imgHeightStr","isFinite","buildMarksTree","nestLists","generateKeys","optionProps","isDefined","val","defaults","isListItem","properties","rawBlocks","keyedBlocks","listNestMode","opts","siblings","level","serializeListItem","findListItemIndex","isSpan","serializeBlock","Boolean","nodes","containerProps","defaultMarks","sortMarksByOccurences","spans","markOccurences","occurences","siblingIndex","sibling","sortByOccurence","markA","markB","aOccurences","bOccurences","aDefaultPos","bDefaultPos","sort","markDefs","sortedMarks","rootNode","nodeStack","marksNeeded","pos","markKey","splice","currentNode","findLastParentNode","find","def","lines","line","isListBlock","blockMatchesList","listFromBlock","lastChild","findListMatching","matching","filterOnType","mode","tree","currentList","newList","lastListItem","newLastChild","match","_match","checksum","str","hash","strlen","charCodeAt","item","JSON","stringify","_getSerializers","nestMarks"],"mappings":"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","file":"20-e0405b61faab0305f72c.js","sourcesContent":["module.exports = require('./lib/internals')\n","'use strict';\n\nvar generateHelpUrl = require('@sanity/generate-help-url');\nvar urlBuilder = require('@sanity/image-url');\nvar objectAssign = require('object-assign');\n\nvar enc = encodeURIComponent;\nvar materializeError = 'You must either:\\n  - Pass `projectId` and `dataset` to the block renderer\\n  - Materialize images to include the `url` field.\\n\\nFor more information, see ' + generateHelpUrl('block-content-image-materializing');\n\nvar getQueryString = function getQueryString(options) {\n  var query = options.imageOptions;\n  var keys = Object.keys(query);\n  if (!keys.length) {\n    return '';\n  }\n\n  var params = keys.map(function (key) {\n    return enc(key) + '=' + enc(query[key]);\n  });\n  return '?' + params.join('&');\n};\n\nvar buildUrl = function buildUrl(props) {\n  var node = props.node,\n      options = props.options;\n  var projectId = options.projectId,\n      dataset = options.dataset;\n\n  var asset = node.asset;\n\n  if (!asset) {\n    throw new Error('Image does not have required `asset` property');\n  }\n\n  if (asset.url) {\n    return asset.url + getQueryString(options);\n  }\n\n  if (!projectId || !dataset) {\n    throw new Error(materializeError);\n  }\n\n  var ref = asset._ref;\n  if (!ref) {\n    throw new Error('Invalid image reference in block, no `_ref` found on `asset`');\n  }\n\n  return urlBuilder(objectAssign({ projectId: projectId, dataset: dataset }, options.imageOptions || {})).image(node).toString();\n};\n\nmodule.exports = buildUrl;\n//# sourceMappingURL=getImageUrl.js.map","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar objectAssign = require('object-assign');\nvar isDefined = function isDefined(val) {\n  return typeof val !== 'undefined';\n};\n\n// Recursively merge/replace default serializers with user-specified serializers\nmodule.exports = function mergeSerializers(defaultSerializers, userSerializers) {\n  return Object.keys(defaultSerializers).reduce(function (acc, key) {\n    var type = _typeof(defaultSerializers[key]);\n    if (type === 'function') {\n      acc[key] = isDefined(userSerializers[key]) ? userSerializers[key] : defaultSerializers[key];\n    } else if (type === 'object') {\n      acc[key] = objectAssign({}, defaultSerializers[key], userSerializers[key]);\n    } else {\n      acc[key] = typeof userSerializers[key] === 'undefined' ? defaultSerializers[key] : userSerializers[key];\n    }\n    return acc;\n  }, {});\n};\n//# sourceMappingURL=mergeSerializers.js.map","'use strict';\n\nvar React = require('react');\nvar PropTypes = require('prop-types');\nvar internals = require('@sanity/block-content-to-hyperscript/internals');\n\nvar _require = require('./targets/dom'),\n    serializers = _require.serializers,\n    serializeSpan = _require.serializeSpan,\n    renderProps = _require.renderProps;\n\nvar getImageUrl = internals.getImageUrl,\n    blocksToNodes = internals.blocksToNodes,\n    mergeSerializers = internals.mergeSerializers;\n\nvar renderNode = React.createElement;\n\nvar SanityBlockContent = function SanityBlockContent(props) {\n  var customSerializers = mergeSerializers(SanityBlockContent.defaultSerializers, props.serializers);\n\n  var blockProps = Object.assign({}, renderProps, props, {\n    serializers: customSerializers,\n    blocks: props.blocks || []\n  });\n\n  return blocksToNodes(renderNode, blockProps, serializers, serializeSpan);\n};\n\n// Expose default serializers to the user\nSanityBlockContent.defaultSerializers = serializers;\n\n// Expose logic for building image URLs from an image reference/node\nSanityBlockContent.getImageUrl = getImageUrl;\n\nSanityBlockContent.propTypes = {\n  className: PropTypes.string,\n  renderContainerOnSingleChild: PropTypes.bool,\n\n  // When rendering images, we need project id and dataset, unless images are materialized\n  projectId: PropTypes.string,\n  dataset: PropTypes.string,\n  imageOptions: PropTypes.object,\n\n  serializers: PropTypes.shape({\n    // Common overrides\n    types: PropTypes.object,\n    marks: PropTypes.object,\n\n    // Less common overrides\n    list: PropTypes.func,\n    listItem: PropTypes.func,\n\n    // Low-level serializers\n    block: PropTypes.func,\n    span: PropTypes.func\n  }),\n\n  blocks: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.shape({\n    _type: PropTypes.string.isRequired\n  })), PropTypes.shape({\n    _type: PropTypes.string.isRequired\n  })]).isRequired\n};\n\nSanityBlockContent.defaultProps = {\n  renderContainerOnSingleChild: false,\n  serializers: {},\n  imageOptions: {}\n};\n\nmodule.exports = SanityBlockContent;\n//# sourceMappingURL=BlockContent.js.map","'use strict';\n\nvar getSerializers = require('./serializers');\nvar _blocksToNodes = require('./blocksToNodes');\nvar getImageUrl = require('./getImageUrl');\nvar mergeSerializers = require('./mergeSerializers');\n\nmodule.exports = {\n  blocksToNodes: function blocksToNodes(renderNode, props, defaultSerializers, serializeSpan) {\n    if (defaultSerializers) {\n      return _blocksToNodes(renderNode, props, defaultSerializers, serializeSpan);\n    }\n\n    // Backwards-compatibility\n    var serializers = getSerializers(renderNode);\n    return _blocksToNodes(renderNode, props, serializers.defaultSerializers, serializers.serializeSpan);\n  },\n  getSerializers: getSerializers,\n  getImageUrl: getImageUrl,\n  mergeSerializers: mergeSerializers\n};\n//# sourceMappingURL=internals.js.map","'use strict';\n\nvar objectAssign = require('object-assign');\nvar getImageUrl = require('./getImageUrl');\n\nmodule.exports = function (h, serializerOpts) {\n  var serializeOptions = serializerOpts || { useDashedStyles: false\n\n    // Low-level block serializer\n  };function BlockSerializer(props) {\n    var node = props.node,\n        serializers = props.serializers,\n        options = props.options,\n        isInline = props.isInline,\n        children = props.children;\n\n    var blockType = node._type;\n    var serializer = serializers.types[blockType];\n    if (!serializer) {\n      throw new Error('Unknown block type \"' + blockType + '\", please specify a serializer for it in the `serializers.types` prop');\n    }\n\n    return h(serializer, { node: node, options: options, isInline: isInline }, children);\n  }\n\n  // Low-level span serializer\n  function SpanSerializer(props) {\n    var _props$node = props.node,\n        mark = _props$node.mark,\n        children = _props$node.children;\n\n    var isPlain = typeof mark === 'string';\n    var markType = isPlain ? mark : mark._type;\n    var serializer = props.serializers.marks[markType];\n    if (!serializer) {\n      // @todo Revert back to throwing errors?\n      // eslint-disable-next-line no-console\n      console.warn('Unknown mark type \"' + markType + '\", please specify a serializer for it in the `serializers.marks` prop');\n      return h(props.serializers.markFallback, null, children);\n    }\n\n    return h(serializer, props.node, children);\n  }\n\n  // Low-level list serializer\n  function ListSerializer(props) {\n    var tag = props.type === 'bullet' ? 'ul' : 'ol';\n    return h(tag, null, props.children);\n  }\n\n  // Low-level list item serializer\n  function ListItemSerializer(props) {\n    var children = !props.node.style || props.node.style === 'normal' ? // Don't wrap plain text in paragraphs inside of a list item\n    props.children : // But wrap any other style in whatever the block serializer says to use\n    h(props.serializers.types.block, props, props.children);\n\n    return h('li', null, children);\n  }\n\n  // Renderer of an actual block of type `block`. Confusing, we know.\n  function BlockTypeSerializer(props) {\n    var style = props.node.style || 'normal';\n\n    if (/^h\\d/.test(style)) {\n      return h(style, null, props.children);\n    }\n\n    return style === 'blockquote' ? h('blockquote', null, props.children) : h('p', null, props.children);\n  }\n\n  // Serializers for things that can be directly attributed to a tag without any props\n  // We use partial application to do this, passing the tag name as the first argument\n  function RawMarkSerializer(tag, props) {\n    return h(tag, null, props.children);\n  }\n\n  function UnderlineSerializer(props) {\n    var style = serializeOptions.useDashedStyles ? { 'text-decoration': 'underline' } : { textDecoration: 'underline' };\n\n    return h('span', { style: style }, props.children);\n  }\n\n  function StrikeThroughSerializer(props) {\n    return h('del', null, props.children);\n  }\n\n  function LinkSerializer(props) {\n    return h('a', { href: props.mark.href }, props.children);\n  }\n\n  function ImageSerializer(props) {\n    if (!props.node.asset) {\n      return null;\n    }\n\n    var img = h('img', { src: getImageUrl(props) });\n    return props.isInline ? img : h('figure', null, img);\n  }\n\n  // Serializer that recursively calls itself, producing a hyperscript tree of spans\n  function serializeSpan(span, serializers, index, options) {\n    if (span === '\\n' && serializers.hardBreak) {\n      return h(serializers.hardBreak, { key: 'hb-' + index });\n    }\n\n    if (typeof span === 'string') {\n      return serializers.text ? h(serializers.text, { key: 'text-' + index }, span) : span;\n    }\n\n    var children = void 0;\n    if (span.children) {\n      children = {\n        children: span.children.map(function (child, i) {\n          return options.serializeNode(child, i, span.children, true);\n        })\n      };\n    }\n\n    var serializedNode = objectAssign({}, span, children);\n\n    return h(serializers.span, {\n      key: span._key || 'span-' + index,\n      node: serializedNode,\n      serializers: serializers\n    });\n  }\n\n  var HardBreakSerializer = function HardBreakSerializer() {\n    return h('br');\n  };\n  var defaultMarkSerializers = {\n    strong: RawMarkSerializer.bind(null, 'strong'),\n    em: RawMarkSerializer.bind(null, 'em'),\n    code: RawMarkSerializer.bind(null, 'code'),\n    underline: UnderlineSerializer,\n    'strike-through': StrikeThroughSerializer,\n    link: LinkSerializer\n  };\n\n  var defaultSerializers = {\n    // Common overrides\n    types: {\n      block: BlockTypeSerializer,\n      image: ImageSerializer\n    },\n    marks: defaultMarkSerializers,\n\n    // Less common overrides\n    list: ListSerializer,\n    listItem: ListItemSerializer,\n\n    block: BlockSerializer,\n    span: SpanSerializer,\n    hardBreak: HardBreakSerializer,\n\n    // Container element\n    container: 'div',\n\n    // When we can't resolve the mark properly, use this renderer as the container\n    markFallback: 'span',\n\n    // Allow overriding text renderer, but leave undefined to just use plain strings by default\n    text: undefined,\n\n    // Empty nodes (React uses null, hyperscript with empty strings)\n    empty: ''\n  };\n\n  return {\n    defaultSerializers: defaultSerializers,\n    serializeSpan: serializeSpan\n  };\n};\n//# sourceMappingURL=serializers.js.map","var baseUrl = 'https://docs.sanity.io/help/'\n\nmodule.exports = function generateHelpUrl(slug) {\n  return baseUrl + slug\n}\n","// eslint-disable-next-line import/no-commonjs\nmodule.exports = require('./lib/builder').default\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = urlBuilder;\n\nvar _urlForImage = _interopRequireDefault(require(\"./urlForImage\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar validFits = ['clip', 'crop', 'fill', 'fillmax', 'max', 'scale', 'min'];\nvar validCrops = ['top', 'bottom', 'left', 'right', 'center', 'focalpoint', 'entropy'];\n\nvar ImageUrlBuilder =\n/*#__PURE__*/\nfunction () {\n  function ImageUrlBuilder(parent, options) {\n    _classCallCheck(this, ImageUrlBuilder);\n\n    if (parent) {\n      this.options = _objectSpread({}, parent.options || {}, options || {});\n    } else {\n      this.options = options || {};\n    }\n  }\n\n  _createClass(ImageUrlBuilder, [{\n    key: \"withOptions\",\n    value: function withOptions(options) {\n      return new ImageUrlBuilder(this, options);\n    } // The image to be represented. Accepts a Sanity 'image'-document, 'asset'-document or\n    // _id of asset. To get the benefit of automatic hot-spot/crop integration with the content\n    // studio, the 'image'-document must be provided.\n\n  }, {\n    key: \"image\",\n    value: function image(source) {\n      return this.withOptions({\n        source: source\n      });\n    } // Specify the dataset\n\n  }, {\n    key: \"dataset\",\n    value: function dataset(_dataset) {\n      return this.withOptions({\n        dataset: _dataset\n      });\n    } // Specify the projectId\n\n  }, {\n    key: \"projectId\",\n    value: function projectId(_projectId) {\n      return this.withOptions({\n        projectId: _projectId\n      });\n    } // Specify background color\n\n  }, {\n    key: \"bg\",\n    value: function bg(_bg) {\n      return this.withOptions({\n        bg: _bg\n      });\n    } // Specify the width of the image in pixels\n\n  }, {\n    key: \"width\",\n    value: function width(_width) {\n      return this.withOptions({\n        width: _width\n      });\n    } // Specify the height of the image in pixels\n\n  }, {\n    key: \"height\",\n    value: function height(_height) {\n      return this.withOptions({\n        height: _height\n      });\n    } // Specify focal point in fraction of image dimensions. Each component 0.0-1.0\n\n  }, {\n    key: \"focalPoint\",\n    value: function focalPoint(x, y) {\n      return this.withOptions({\n        focalPoint: {\n          x: x,\n          y: y\n        }\n      });\n    }\n  }, {\n    key: \"maxWidth\",\n    value: function maxWidth(_maxWidth) {\n      return this.withOptions({\n        maxWidth: _maxWidth\n      });\n    }\n  }, {\n    key: \"minWidth\",\n    value: function minWidth(_minWidth) {\n      return this.withOptions({\n        minWidth: _minWidth\n      });\n    }\n  }, {\n    key: \"maxHeight\",\n    value: function maxHeight(_maxHeight) {\n      return this.withOptions({\n        maxHeight: _maxHeight\n      });\n    }\n  }, {\n    key: \"minHeight\",\n    value: function minHeight(_minHeight) {\n      return this.withOptions({\n        minHeight: _minHeight\n      });\n    } // Specify width and height in pixels\n\n  }, {\n    key: \"size\",\n    value: function size(width, height) {\n      return this.withOptions({\n        width: width,\n        height: height\n      });\n    } // Specify blur between 0 and 100\n\n  }, {\n    key: \"blur\",\n    value: function blur(_blur) {\n      return this.withOptions({\n        blur: _blur\n      });\n    }\n  }, {\n    key: \"sharpen\",\n    value: function sharpen(_sharpen) {\n      return this.withOptions({\n        sharpen: _sharpen\n      });\n    } // Specify the desired rectangle of the image\n\n  }, {\n    key: \"rect\",\n    value: function rect(left, top, width, height) {\n      return this.withOptions({\n        rect: {\n          left: left,\n          top: top,\n          width: width,\n          height: height\n        }\n      });\n    } // Specify the image format of the image. 'jpg', 'pjpg', 'png', 'webp'\n\n  }, {\n    key: \"format\",\n    value: function format(_format) {\n      return this.withOptions({\n        format: _format\n      });\n    }\n  }, {\n    key: \"invert\",\n    value: function invert(_invert) {\n      return this.withOptions({\n        invert: _invert\n      });\n    } // Rotation in degrees 0, 90, 180, 270\n\n  }, {\n    key: \"orientation\",\n    value: function orientation(_orientation) {\n      return this.withOptions({\n        orientation: _orientation\n      });\n    } // Compression quality 0-100\n\n  }, {\n    key: \"quality\",\n    value: function quality(_quality) {\n      return this.withOptions({\n        quality: _quality\n      });\n    } // Make it a download link. Parameter is default filename.\n\n  }, {\n    key: \"forceDownload\",\n    value: function forceDownload(download) {\n      return this.withOptions({\n        download: download\n      });\n    } // Flip image horizontally\n\n  }, {\n    key: \"flipHorizontal\",\n    value: function flipHorizontal() {\n      return this.withOptions({\n        flipHorizontal: true\n      });\n    } // Flip image verically\n\n  }, {\n    key: \"flipVertical\",\n    value: function flipVertical() {\n      return this.withOptions({\n        flipVertical: true\n      });\n    } // Ignore crop/hotspot from image record, even when present\n\n  }, {\n    key: \"ignoreImageParams\",\n    value: function ignoreImageParams() {\n      return this.withOptions({\n        ignoreImageParams: true\n      });\n    }\n  }, {\n    key: \"fit\",\n    value: function fit(value) {\n      if (validFits.indexOf(value) === -1) {\n        throw new Error(\"Invalid fit mode \\\"\".concat(value, \"\\\"\"));\n      }\n\n      return this.withOptions({\n        fit: value\n      });\n    }\n  }, {\n    key: \"crop\",\n    value: function crop(value) {\n      if (validCrops.indexOf(value) === -1) {\n        throw new Error(\"Invalid crop mode \\\"\".concat(value, \"\\\"\"));\n      }\n\n      return this.withOptions({\n        crop: value\n      });\n    } // Gets the url based on the submitted parameters\n\n  }, {\n    key: \"url\",\n    value: function url() {\n      return (0, _urlForImage.default)(this.options);\n    } // Synonym for url()\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.url();\n    }\n  }]);\n\n  return ImageUrlBuilder;\n}();\n\nfunction urlBuilder(options) {\n  // Did we get a SanityClient?\n  if (options && _typeof(options.clientConfig) === 'object') {\n    // Inherit config from client\n    return new ImageUrlBuilder(null, {\n      baseUrl: options.clientConfig.apiHost.replace(/^https:\\/\\/api\\./, 'https://cdn.'),\n      projectId: options.clientConfig.projectId,\n      dataset: options.clientConfig.dataset\n    });\n  } // Or just accept the options as given\n\n\n  return new ImageUrlBuilder(null, options);\n}\n//# sourceMappingURL=builder.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = urlForImage;\nObject.defineProperty(exports, \"parseSource\", {\n  enumerable: true,\n  get: function get() {\n    return _parseSource.default;\n  }\n});\n\nvar _parseSource = _interopRequireDefault(require(\"./parseSource\"));\n\nvar _parseAssetId = _interopRequireDefault(require(\"./parseAssetId\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar SPEC_NAME_TO_URL_NAME_MAPPINGS = [['width', 'w'], ['height', 'h'], ['format', 'fm'], ['download', 'dl'], ['blur', 'blur'], ['sharpen', 'sharp'], ['invert', 'invert'], ['orientation', 'or'], ['minHeight', 'min-h'], ['maxHeight', 'max-h'], ['minWidth', 'min-w'], ['maxWidth', 'max-w'], ['quality', 'q'], ['fit', 'fit'], ['crop', 'crop']];\n\nfunction urlForImage(options) {\n  var spec = _objectSpread({}, options || {});\n\n  var source = spec.source;\n  delete spec.source;\n  var image = (0, _parseSource.default)(source);\n\n  if (!image) {\n    return null;\n  }\n\n  var asset = (0, _parseAssetId.default)(image.asset._ref || image.asset._id); // Compute crop rect in terms of pixel coordinates in the raw source image\n\n  var crop = {\n    left: Math.round(image.crop.left * asset.width),\n    top: Math.round(image.crop.top * asset.height)\n  };\n  crop.width = Math.round(asset.width - image.crop.right * asset.width - crop.left);\n  crop.height = Math.round(asset.height - image.crop.bottom * asset.height - crop.top); // Compute hot spot rect in terms of pixel coordinates\n\n  var hotSpotVerticalRadius = image.hotspot.height * asset.height / 2;\n  var hotSpotHorizontalRadius = image.hotspot.width * asset.width / 2;\n  var hotSpotCenterX = image.hotspot.x * asset.width;\n  var hotSpotCenterY = image.hotspot.y * asset.height;\n  var hotspot = {\n    left: hotSpotCenterX - hotSpotHorizontalRadius,\n    top: hotSpotCenterY - hotSpotVerticalRadius,\n    right: hotSpotCenterX + hotSpotHorizontalRadius,\n    bottom: hotSpotCenterY + hotSpotVerticalRadius\n  };\n  spec.asset = asset; // If irrelevant, or if we are requested to: don't perform crop/fit based on\n  // the crop/hotspot.\n\n  if (!(spec.rect || spec.focalPoint || spec.ignoreImageParams || spec.crop)) {\n    spec = _objectSpread({}, spec, fit({\n      crop: crop,\n      hotspot: hotspot\n    }, spec));\n  }\n\n  return specToImageUrl(spec);\n} // eslint-disable-next-line complexity\n\n\nfunction specToImageUrl(spec) {\n  var cdnUrl = spec.baseUrl || 'https://cdn.sanity.io';\n  var filename = \"\".concat(spec.asset.id, \"-\").concat(spec.asset.width, \"x\").concat(spec.asset.height, \".\").concat(spec.asset.format);\n  var baseUrl = \"\".concat(cdnUrl, \"/images/\").concat(spec.projectId, \"/\").concat(spec.dataset, \"/\").concat(filename);\n  var params = [];\n\n  if (spec.rect) {\n    // Only bother url with a crop if it actually crops anything\n    var isEffectiveCrop = spec.rect.left != 0 || spec.rect.top != 0 || spec.rect.height != spec.asset.height || spec.rect.width != spec.asset.width;\n\n    if (isEffectiveCrop) {\n      params.push(\"rect=\".concat(spec.rect.left, \",\").concat(spec.rect.top, \",\").concat(spec.rect.width, \",\").concat(spec.rect.height));\n    }\n  }\n\n  if (spec.bg) {\n    params.push(\"bg=\".concat(spec.bg));\n  }\n\n  if (spec.focalPoint) {\n    params.push(\"fp-x=\".concat(spec.focalPoint.x));\n    params.push(\"fp-x=\".concat(spec.focalPoint.y));\n  }\n\n  if (spec.flipHorizontal || spec.flipVertical) {\n    params.push(\"flip=\".concat(spec.flipHorizontal ? 'h' : '').concat(spec.flipVertical ? 'v' : ''));\n  } // Map from spec name to url param name, and allow using the actual param name as an alternative\n\n\n  SPEC_NAME_TO_URL_NAME_MAPPINGS.forEach(function (mapping) {\n    var _mapping = _slicedToArray(mapping, 2),\n        specName = _mapping[0],\n        param = _mapping[1];\n\n    if (typeof spec[specName] !== 'undefined') {\n      params.push(\"\".concat(param, \"=\").concat(encodeURIComponent(spec[specName])));\n    } else if (typeof spec[param] !== 'undefined') {\n      params.push(\"\".concat(param, \"=\").concat(encodeURIComponent(spec[param])));\n    }\n  });\n\n  if (params.length === 0) {\n    return baseUrl;\n  }\n\n  return \"\".concat(baseUrl, \"?\").concat(params.join('&'));\n}\n\nfunction fit(source, spec) {\n  var result = {\n    width: spec.width,\n    height: spec.height // If we are not constraining the aspect ratio, we'll just use the whole crop\n\n  };\n\n  if (!(spec.width && spec.height)) {\n    result.rect = source.crop;\n    return result;\n  }\n\n  var crop = source.crop;\n  var hotspot = source.hotspot; // If we are here, that means aspect ratio is locked and fitting will be a bit harder\n\n  var desiredAspectRatio = spec.width / spec.height;\n  var cropAspectRatio = crop.width / crop.height;\n\n  if (cropAspectRatio > desiredAspectRatio) {\n    // The crop is wider than the desired aspect ratio. That means we are cutting from the sides\n    var _height = crop.height;\n\n    var _width = _height * desiredAspectRatio;\n\n    var _top = crop.top; // Center output horizontally over hotspot\n\n    var hotspotXCenter = (hotspot.right - hotspot.left) / 2 + hotspot.left;\n\n    var _left = hotspotXCenter - _width / 2; // Keep output within crop\n\n\n    if (_left < crop.left) {\n      _left = crop.left;\n    } else if (_left + _width > crop.left + crop.width) {\n      _left = crop.left + crop.width - _width;\n    }\n\n    result.rect = {\n      left: Math.round(_left),\n      top: Math.round(_top),\n      width: Math.round(_width),\n      height: Math.round(_height)\n    };\n    return result;\n  } // The crop is taller than the desired ratio, we are cutting from top and bottom\n\n\n  var width = crop.width;\n  var height = width / desiredAspectRatio;\n  var left = crop.left; // Center output vertically over hotspot\n\n  var hotspotYCenter = (hotspot.bottom - hotspot.top) / 2 + hotspot.top;\n  var top = hotspotYCenter - height / 2; // Keep output rect within crop\n\n  if (top < crop.top) {\n    top = crop.top;\n  } else if (top + height > crop.top + crop.height) {\n    top = crop.top + crop.height - height;\n  }\n\n  result.rect = {\n    left: Math.max(0, Math.floor(left)),\n    top: Math.max(0, Math.floor(top)),\n    width: Math.round(width),\n    height: Math.round(height)\n  };\n  return result;\n} // For backwards-compatibility\n//# sourceMappingURL=urlForImage.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseSource;\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n// Convert an asset-id, asset or image to an image record suitable for processing\n// eslint-disable-next-line complexity\nfunction parseSource(source) {\n  if (!source) {\n    return null;\n  }\n\n  var image;\n\n  if (typeof source === 'string' && isUrl(source)) {\n    // Someone passed an existing image url?\n    image = {\n      asset: {\n        _ref: urlToId(source)\n      }\n    };\n  } else if (typeof source === 'string') {\n    // Just an asset id\n    image = {\n      asset: {\n        _ref: source\n      }\n    };\n  } else if (typeof source._ref === 'string') {\n    // We just got passed an asset directly\n    image = {\n      asset: source\n    };\n  } else if (source._id) {\n    // If we were passed an image asset document\n    image = {\n      asset: {\n        _ref: source._id\n      }\n    };\n  } else if (source.asset && source.asset.url && !source.asset._ref) {\n    image = {\n      asset: {\n        _ref: urlToId(source.asset.url)\n      }\n    };\n  } else if (_typeof(source.asset) === 'object') {\n    image = source;\n  } else {\n    // We got something that does not look like an image, or it is an image\n    // that currently isn't sporting an asset.\n    return null;\n  }\n\n  if (source.crop) {\n    image.crop = source.crop;\n  }\n\n  if (source.hotspot) {\n    image.hotspot = source.hotspot;\n  }\n\n  return applyDefaults(image);\n}\n\nfunction isUrl(url) {\n  return /^https?:\\/\\//.test(\"\".concat(url));\n}\n\nfunction urlToId(url) {\n  var parts = url.split('/').slice(-1);\n  return \"image-\".concat(parts[0]).replace(/\\.([a-z]+)$/, '-$1');\n} // Mock crop and hotspot if image lacks it\n\n\nfunction applyDefaults(image) {\n  if (image.crop && image.hotspot) {\n    return image;\n  } // We need to pad in default values for crop or hotspot\n\n\n  var result = Object.assign({}, image);\n\n  if (!result.crop) {\n    result.crop = {\n      left: 0,\n      top: 0,\n      bottom: 0,\n      right: 0\n    };\n  }\n\n  if (!result.hotspot) {\n    result.hotspot = {\n      x: 0.5,\n      y: 0.5,\n      height: 1.0,\n      width: 1.0\n    };\n  }\n\n  return result;\n}\n//# sourceMappingURL=parseSource.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAssetId;\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar example = 'image-Tb9Ew8CXIwaY6R1kjMvI0uRR-2000x3000-jpg';\n\nfunction parseAssetId(ref) {\n  var _ref$split = ref.split('-'),\n      _ref$split2 = _slicedToArray(_ref$split, 4),\n      id = _ref$split2[1],\n      dimensionString = _ref$split2[2],\n      format = _ref$split2[3];\n\n  if (!id || !dimensionString || !format) {\n    throw new Error(\"Malformed asset _ref '\".concat(ref, \"'. Expected an id like \\\"\").concat(example, \"\\\".\"));\n  }\n\n  var _dimensionString$spli = dimensionString.split('x'),\n      _dimensionString$spli2 = _slicedToArray(_dimensionString$spli, 2),\n      imgWidthStr = _dimensionString$spli2[0],\n      imgHeightStr = _dimensionString$spli2[1];\n\n  var width = +imgWidthStr;\n  var height = +imgHeightStr;\n  var isValidAssetId = isFinite(width) && isFinite(height);\n\n  if (!isValidAssetId) {\n    throw new Error(\"Malformed asset _ref '\".concat(ref, \"'. Expected an id like \\\"\").concat(example, \"\\\".\"));\n  }\n\n  return {\n    id: id,\n    width: width,\n    height: height,\n    format: format\n  };\n}\n//# sourceMappingURL=parseAssetId.js.map","'use strict';\n\nvar objectAssign = require('object-assign');\nvar buildMarksTree = require('./buildMarksTree');\nvar nestLists = require('./nestLists');\nvar generateKeys = require('./generateKeys');\nvar mergeSerializers = require('./mergeSerializers');\n\n// Properties to extract from props and pass to serializers as options\nvar optionProps = ['projectId', 'dataset', 'imageOptions'];\nvar isDefined = function isDefined(val) {\n  return typeof val !== 'undefined';\n};\nvar defaults = { imageOptions: {} };\n\nfunction blocksToNodes(h, properties, defaultSerializers, serializeSpan) {\n  var props = objectAssign({}, defaults, properties);\n  var rawBlocks = Array.isArray(props.blocks) ? props.blocks : [props.blocks];\n  var keyedBlocks = generateKeys(rawBlocks);\n  var blocks = nestLists(keyedBlocks, props.listNestMode);\n  var serializers = mergeSerializers(defaultSerializers, props.serializers || {});\n\n  var options = optionProps.reduce(function (opts, key) {\n    var value = props[key];\n    if (isDefined(value)) {\n      opts[key] = value;\n    }\n    return opts;\n  }, {});\n\n  function serializeNode(node, index, siblings, isInline) {\n    if (isList(node)) {\n      return serializeList(node);\n    }\n\n    if (isListItem(node)) {\n      return serializeListItem(node, findListItemIndex(node, siblings));\n    }\n\n    if (isSpan(node)) {\n      return serializeSpan(node, serializers, index, { serializeNode: serializeNode });\n    }\n\n    return serializeBlock(node, index, isInline);\n  }\n\n  function findListItemIndex(node, siblings) {\n    var index = 0;\n    for (var i = 0; i < siblings.length; i++) {\n      if (siblings[i] === node) {\n        return index;\n      }\n\n      if (!isListItem(siblings[i])) {\n        continue;\n      }\n\n      index++;\n    }\n\n    return index;\n  }\n\n  function serializeBlock(block, index, isInline) {\n    var tree = buildMarksTree(block);\n    var children = tree.map(function (node, i, siblings) {\n      return serializeNode(node, i, siblings, true);\n    });\n    var blockProps = {\n      key: block._key || 'block-' + index,\n      node: block,\n      isInline: isInline,\n      serializers: serializers,\n      options: options\n    };\n\n    return h(serializers.block, blockProps, children);\n  }\n\n  function serializeListItem(block, index) {\n    var key = block._key;\n    var tree = buildMarksTree(block);\n    var children = tree.map(serializeNode);\n    return h(serializers.listItem, { node: block, serializers: serializers, index: index, key: key, options: options }, children);\n  }\n\n  function serializeList(list) {\n    var type = list.listItem;\n    var level = list.level;\n    var key = list._key;\n    var children = list.children.map(serializeNode);\n    return h(serializers.list, { key: key, level: level, type: type, options: options }, children);\n  }\n\n  // Default to false, so `undefined` will evaluate to the default here\n  var renderContainerOnSingleChild = Boolean(props.renderContainerOnSingleChild);\n\n  var nodes = blocks.map(serializeNode);\n  if (renderContainerOnSingleChild || nodes.length > 1) {\n    var containerProps = props.className ? { className: props.className } : {};\n    return h(serializers.container, containerProps, nodes);\n  }\n\n  if (nodes[0]) {\n    return nodes[0];\n  }\n\n  return typeof serializers.empty === 'function' ? h(serializers.empty) : serializers.empty;\n}\n\nfunction isList(block) {\n  return block._type === 'list' && block.listItem;\n}\n\nfunction isListItem(block) {\n  return block._type === 'block' && block.listItem;\n}\n\nfunction isSpan(block) {\n  return typeof block === 'string' || block.marks || block._type === 'span';\n}\n\nmodule.exports = blocksToNodes;\n//# sourceMappingURL=blocksToNodes.js.map","'use strict';\n\nvar defaultMarks = ['strong', 'em', 'code', 'underline', 'strike-through'];\n\nvar buildMarksTree = function buildMarksTree(block) {\n  var children = block.children,\n      markDefs = block.markDefs;\n\n  if (!children || !children.length) {\n    return [];\n  }\n\n  var sortedMarks = children.map(sortMarksByOccurences);\n  var rootNode = { _type: 'span', children: [] };\n  var nodeStack = [rootNode];\n\n  children.forEach(function (span, i) {\n    var marksNeeded = sortedMarks[i];\n    if (!marksNeeded) {\n      var lastNode = nodeStack[nodeStack.length - 1];\n      lastNode.children.push(span);\n      return;\n    }\n\n    var pos = 1;\n\n    // Start at position one. Root is always plain and should never be removed. (?)\n    if (nodeStack.length > 1) {\n      for (pos; pos < nodeStack.length; pos++) {\n        var mark = nodeStack[pos].markKey;\n        var index = marksNeeded.indexOf(mark);\n        // eslint-disable-next-line max-depth\n        if (index === -1) {\n          break;\n        }\n\n        marksNeeded.splice(index, 1);\n      }\n    }\n\n    // Keep from beginning to first miss\n    nodeStack = nodeStack.slice(0, pos);\n\n    // Add needed nodes\n    var currentNode = findLastParentNode(nodeStack);\n    marksNeeded.forEach(function (mark) {\n      var node = {\n        _type: 'span',\n        _key: span._key,\n        children: [],\n        mark: markDefs.find(function (def) {\n          return def._key === mark;\n        }) || mark,\n        markKey: mark\n      };\n\n      currentNode.children.push(node);\n      nodeStack.push(node);\n      currentNode = node;\n    });\n\n    // Split at newlines to make individual line chunks, but keep newline\n    // characters as individual elements in the array. We use these characters\n    // in the span serializer to trigger hard-break rendering\n    if (isTextSpan(span)) {\n      var lines = span.text.split('\\n');\n      for (var line = lines.length; line-- > 1;) {\n        lines.splice(line, 0, '\\n');\n      }\n\n      currentNode.children = currentNode.children.concat(lines);\n    } else {\n      currentNode.children = currentNode.children.concat(span);\n    }\n  });\n\n  return rootNode.children;\n};\n\n// We want to sort all the marks of all the spans in the following order:\n// 1. Marks that are shared amongst the most adjacent siblings\n// 2. Non-default marks (links, custom metadata)\n// 3. Built-in, plain marks (bold, emphasis, code etc)\nfunction sortMarksByOccurences(span, i, spans) {\n  if (!span.marks || span.marks.length === 0) {\n    return span.marks || [];\n  }\n\n  var markOccurences = span.marks.reduce(function (occurences, mark) {\n    occurences[mark] = occurences[mark] ? occurences[mark] + 1 : 1;\n\n    for (var siblingIndex = i + 1; siblingIndex < spans.length; siblingIndex++) {\n      var sibling = spans[siblingIndex];\n\n      if (sibling.marks && Array.isArray(sibling.marks) && sibling.marks.indexOf(mark) !== -1) {\n        occurences[mark]++;\n      } else {\n        break;\n      }\n    }\n\n    return occurences;\n  }, {});\n\n  var sortByOccurence = sortMarks.bind(null, markOccurences);\n\n  // Slicing because sort() mutates the input\n  return span.marks.slice().sort(sortByOccurence);\n}\n\nfunction sortMarks(occurences, markA, markB) {\n  var aOccurences = occurences[markA] || 0;\n  var bOccurences = occurences[markB] || 0;\n\n  if (aOccurences !== bOccurences) {\n    return bOccurences - aOccurences;\n  }\n\n  var aDefaultPos = defaultMarks.indexOf(markA);\n  var bDefaultPos = defaultMarks.indexOf(markB);\n\n  // Sort default marks last\n  if (aDefaultPos !== bDefaultPos) {\n    return aDefaultPos - bDefaultPos;\n  }\n\n  // Sort other marks simply by key\n  if (markA < markB) {\n    return -1;\n  } else if (markA > markB) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction isTextSpan(node) {\n  return node._type === 'span' && typeof node.text === 'string' && (Array.isArray(node.marks) || typeof node.marks === 'undefined');\n}\n\nfunction findLastParentNode(nodes) {\n  for (var i = nodes.length - 1; i >= 0; i--) {\n    var node = nodes[i];\n    if (node._type === 'span' && node.children) {\n      return node;\n    }\n  }\n\n  return undefined;\n}\n\nmodule.exports = buildMarksTree;\n//# sourceMappingURL=buildMarksTree.js.map","'use strict';\n\nvar objectAssign = require('object-assign');\n\n/* eslint-disable max-depth, complexity */\nfunction nestLists(blocks) {\n  var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'html';\n\n  var tree = [];\n  var currentList = void 0;\n\n  for (var i = 0; i < blocks.length; i++) {\n    var block = blocks[i];\n    if (!isListBlock(block)) {\n      tree.push(block);\n      currentList = null;\n      continue;\n    }\n\n    // Start of a new list?\n    if (!currentList) {\n      currentList = listFromBlock(block);\n      tree.push(currentList);\n      continue;\n    }\n\n    // New list item within same list?\n    if (blockMatchesList(block, currentList)) {\n      currentList.children.push(block);\n      continue;\n    }\n\n    // Different list props, are we going deeper?\n    if (block.level > currentList.level) {\n      var newList = listFromBlock(block);\n\n      if (mode === 'html') {\n        // Because HTML is kinda weird, nested lists needs to be nested within list items\n        // So while you would think that we could populate the parent list with a new sub-list,\n        // We actually have to target the last list element (child) of the parent.\n        // However, at this point we need to be very careful - simply pushing to the list of children\n        // will mutate the input, and we don't want to blindly clone the entire tree.\n\n        // Clone the last child while adding our new list as the last child of it\n        var lastListItem = lastChild(currentList);\n        var newLastChild = objectAssign({}, lastListItem, {\n          children: lastListItem.children.concat(newList)\n        });\n\n        // Swap the last child\n        currentList.children[currentList.children.length - 1] = newLastChild;\n      } else {\n        currentList.children.push(newList);\n      }\n\n      // Set the newly created, deeper list as the current\n      currentList = newList;\n      continue;\n    }\n\n    // Different list props, are we going back up the tree?\n    if (block.level < currentList.level) {\n      // Current list has ended, and we need to hook up with a parent of the same level and type\n      var match = findListMatching(tree[tree.length - 1], block);\n      if (match) {\n        currentList = match;\n        currentList.children.push(block);\n        continue;\n      }\n\n      // Similar parent can't be found, assume new list\n      currentList = listFromBlock(block);\n      tree.push(currentList);\n      continue;\n    }\n\n    // Different list props, different list style?\n    if (block.listItem !== currentList.listItem) {\n      var _match = findListMatching(tree[tree.length - 1], { level: block.level });\n      if (_match && _match.listItem === block.listItem) {\n        currentList = _match;\n        currentList.children.push(block);\n        continue;\n      } else {\n        currentList = listFromBlock(block);\n        tree.push(currentList);\n        continue;\n      }\n    }\n\n    // eslint-disable-next-line no-console\n    console.warn('Unknown state encountered for block', block);\n    tree.push(block);\n  }\n\n  return tree;\n}\n\nfunction isListBlock(block) {\n  return Boolean(block.listItem);\n}\n\nfunction blockMatchesList(block, list) {\n  return block.level === list.level && block.listItem === list.listItem;\n}\n\nfunction listFromBlock(block) {\n  return {\n    _type: 'list',\n    _key: block._key + '-parent',\n    level: block.level,\n    listItem: block.listItem,\n    children: [block]\n  };\n}\n\nfunction lastChild(block) {\n  return block.children && block.children[block.children.length - 1];\n}\n\nfunction findListMatching(rootNode, matching) {\n  var filterOnType = typeof matching.listItem === 'string';\n  if (rootNode._type === 'list' && rootNode.level === matching.level && filterOnType && rootNode.listItem === matching.listItem) {\n    return rootNode;\n  }\n\n  var node = lastChild(rootNode);\n  if (!node) {\n    return false;\n  }\n\n  return findListMatching(node, matching);\n}\n\nmodule.exports = nestLists;\n//# sourceMappingURL=nestLists.js.map","'use strict';\n\nvar objectAssign = require('object-assign');\n\nmodule.exports = function (blocks) {\n  return blocks.map(function (block) {\n    if (block._key) {\n      return block;\n    }\n\n    return objectAssign({ _key: getStaticKey(block) }, block);\n  });\n};\n\nfunction getStaticKey(item) {\n  return checksum(JSON.stringify(item)).toString(36).replace(/[^A-Za-z0-9]/g, '');\n}\n\n/* eslint-disable no-bitwise */\nfunction checksum(str) {\n  var hash = 0;\n  var strlen = str.length;\n  if (strlen === 0) {\n    return hash;\n  }\n\n  for (var i = 0; i < strlen; i++) {\n    hash = (hash << 5) - hash + str.charCodeAt(i);\n    hash &= hash; // Convert to 32bit integer\n  }\n\n  return hash;\n}\n/* eslint-enable no-bitwise */\n//# sourceMappingURL=generateKeys.js.map","'use strict';\n\nvar React = require('react');\n\nvar _require = require('@sanity/block-content-to-hyperscript/internals'),\n    getSerializers = _require.getSerializers;\n\nvar renderNode = React.createElement;\n\nvar _getSerializers = getSerializers(renderNode),\n    defaultSerializers = _getSerializers.defaultSerializers,\n    serializeSpan = _getSerializers.serializeSpan;\n\nmodule.exports = {\n  serializeSpan: serializeSpan,\n  serializers: defaultSerializers,\n  renderProps: { nestMarks: true }\n};\n//# sourceMappingURL=dom.js.map"],"sourceRoot":""}