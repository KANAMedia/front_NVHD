{"version":3,"sources":["webpack:///./src/components/galeire-image-slide/galerieImageSlide.js","webpack:///./src/components/galerie-image-view/gatsbyImagePrepare.js","webpack:///./src/components/galerie-image-view/galerieImageView.js","webpack:///./src/templates/galerieTemplate.js","webpack:///./src/components/galerie-image-view/galerieImageView.module.scss"],"names":["GallerieImageSlide","render","console","log","this","props","react_default","a","createElement","Lightbox_default","images","isOpen","sliderState","onClose","closeSlider","onClickPrev","gotoPrevious","onClickNext","gotoNext","currentImage","width","React","Component","GatsbyImagePrepare","fluidProps","getFluidGatsbyImage","photo","src","maxWidth","projectId","dataset","style","margin","height","onClick","e","gatsby_image_default","fluid","galerieImageView","_this","_React$Component","call","state","showSlider","imagesID","bind","assertThisInitialized_default","openSlider","event","obj","setState","index","getFluidProps","componentWillMount","_this2","stuff","galerie","bild","forEach","prevState","concat","asset","path","_id","Math","round","metadata","dimensions","componentDidMount","_this3","imageIDs","map","imageID","imageFluidProps","push","imageSrcSet","image","srcSet","Object","assign","Fragment","title","className","styles","heading","galerieImageSlide_GallerieImageSlide","react_photo_gallery_esm","photos","ImageComponent","ImgPrep","GalerieTemplate","layout","galerieImageView_galerieImageView","pageContext","node","module","exports","overlay","imageItem"],"mappings":"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","file":"component---src-templates-galerie-template-js-357c344cdde163170bfa.js","sourcesContent":["import React from 'react'\r\nimport ImageSlider from 'react-images'\r\nimport './image-gallery.scss'\r\n\r\nexport default class GallerieImageSlide extends React.Component {\r\n  render() {\r\n    console.log(this.props)\r\n\r\n    return (\r\n      <ImageSlider\r\n        images={this.props.images}\r\n        isOpen={this.props.sliderState}\r\n        onClose={this.props.closeSlider}\r\n        onClickPrev={this.props.gotoPrevious}\r\n        onClickNext={this.props.gotoNext}\r\n        currentImage={this.props.currentImage}\r\n        width={2000}\r\n      />\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport Img from 'gatsby-image'\r\nimport { getFluidGatsbyImage, getFixedGatsbyImage } from 'gatsby-source-sanity'\r\n\r\nexport default function GatsbyImagePrepare(props) {\r\n  const sanityConfig = { projectId: '74ftimmm', dataset: 'production' }\r\n\r\n  const fluidProps = getFluidGatsbyImage(\r\n    props.photo.src,\r\n    { maxWidth: 1024 },\r\n    sanityConfig\r\n  )\r\n\r\n  // console.log(fluidProps)\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: props.margin,\r\n        height: props.photo.height,\r\n        width: props.photo.width,\r\n      }}\r\n      onClick={e => props.onClick(e, props)}\r\n    >\r\n      <Img fluid={fluidProps} />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styles from './galerieImageView.module.scss'\r\nimport GallerySlider from '../galeire-image-slide/galerieImageSlide'\r\nimport Gallery from 'react-photo-gallery'\r\nimport ImgPrep from './gatsbyImagePrepare'\r\nimport { getFluidGatsbyImage, getFixedGatsbyImage } from 'gatsby-source-sanity'\r\n\r\nexport default class galerieImageView extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      showSlider: false,\r\n      imagesID: [],\r\n      images: [],\r\n      currentImage: 0,\r\n    }\r\n    this.closeSlider = this.closeSlider.bind(this)\r\n    this.openSlider = this.openSlider.bind(this)\r\n    this.gotoNext = this.gotoNext.bind(this)\r\n    this.gotoPrevious = this.gotoPrevious.bind(this)\r\n  }\r\n\r\n  openSlider(event, obj) {\r\n    this.setState({\r\n      currentImage: obj.index,\r\n      showSlider: true,\r\n    })\r\n  }\r\n\r\n  closeSlider() {\r\n    this.setState({\r\n      currentImage: 0,\r\n      showSlider: false,\r\n    })\r\n  }\r\n\r\n  gotoPrevious() {\r\n    this.setState({\r\n      currentImage: this.state.currentImage - 1,\r\n    })\r\n  }\r\n\r\n  gotoNext() {\r\n    this.setState({\r\n      currentImage: this.state.currentImage + 1,\r\n    })\r\n  }\r\n\r\n  getFluidProps(imagesID) {\r\n    const sanityConfig = { projectId: '74ftimmm', dataset: 'production' }\r\n    const fluidProps = getFluidGatsbyImage(\r\n      imagesID,\r\n      { maxWidth: 1024 },\r\n      sanityConfig\r\n    )\r\n\r\n    return fluidProps\r\n  }\r\n\r\n  componentWillMount() {\r\n    console.log(this.props)\r\n    this.props.stuff.galerie.bild.forEach(bild => {\r\n      this.setState(prevState => ({\r\n        images: [\r\n          ...prevState.images,\r\n          {\r\n            src: `https://cdn.sanity.io/${bild.asset.path}`,\r\n          },\r\n        ],\r\n        imagesID: [\r\n          ...prevState.imagesID,\r\n          {\r\n            src: bild.asset._id,\r\n            width: Math.round(bild.asset.metadata.dimensions.width),\r\n            height: Math.round(bild.asset.metadata.dimensions.height),\r\n          },\r\n        ],\r\n      }))\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    const imageIDs = this.state.imagesID.map(imageID => imageID.src)\r\n    let imageFluidProps = []\r\n    imageIDs.forEach(imageID => {\r\n      imageFluidProps.push(this.getFluidProps(imageID))\r\n    })\r\n    let imageSrcSet = imageFluidProps.map(image => image.srcSet)\r\n    this.state.images.forEach((image, index) => {\r\n      Object.assign(image, { srcSet: imageSrcSet[index] })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props)\r\n    console.log(this.state)\r\n    return (\r\n      <React.Fragment>\r\n        {this.props.stuff.title && (\r\n          <h2 className={styles.heading}>{this.props.stuff.title}</h2>\r\n        )}\r\n        {this.state.showSlider && (\r\n          <GallerySlider\r\n            images={this.state.images}\r\n            openSlider={this.openSlider}\r\n            closeSlider={this.closeSlider}\r\n            gotoPrevious={this.gotoPrevious}\r\n            gotoNext={this.gotoNext}\r\n            sliderState={this.state.showSlider}\r\n            currentImage={this.state.currentImage}\r\n          />\r\n        )}\r\n\r\n        <Gallery\r\n          photos={this.state.imagesID}\r\n          onClick={this.openSlider}\r\n          ImageComponent={ImgPrep}\r\n        />\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport Layout from '../components/layout'\r\nimport GalerieImageView from '../components/galerie-image-view/galerieImageView'\r\n\r\nconst GalerieTemplate = props => {\r\n  console.log(props)\r\n  return (\r\n    <Layout>\r\n      <GalerieImageView stuff={props.pageContext.galerie.node} />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default GalerieTemplate\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"galerieImageView-module--overlay--2Qy_U\",\"heading\":\"galerieImageView-module--heading--rcP7m\",\"galerieImageView\":\"galerieImageView-module--galerieImageView--JFIdD\",\"imageItem\":\"galerieImageView-module--imageItem--2ytqE\"};"],"sourceRoot":""}