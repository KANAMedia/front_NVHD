{"version":3,"sources":["webpack:///./node_modules/gatsby-image/index.js","webpack:///./node_modules/gatsby-source-sanity/index.js","webpack:///./node_modules/gatsby-source-sanity/lib/index.js","webpack:///./node_modules/gatsby-source-sanity/lib/images/getGatsbyImageProps.js","webpack:///./node_modules/url-parse/index.js","webpack:///./node_modules/requires-port/index.js","webpack:///./node_modules/querystringify/index.js"],"names":["_interopRequireDefault","__webpack_require__","exports","__esModule","default","io","_inheritsLoose2","_assertThisInitialized2","_objectWithoutPropertiesLoose2","_extends2","_react","_propTypes","convertProps","props","convertedProps","resolutions","fixed","sizes","fluid","imageCache","inImageCache","src","listeners","listenToIntersections","el","cb","window","IntersectionObserver","entries","forEach","entry","l","target","isIntersecting","intersectionRatio","unobserve","rootMargin","observe","push","noscriptImg","srcSetWebp","srcSet","title","alt","width","height","opacity","transitionDelay","Img","forwardRef","ref","style","onLoad","onError","otherProps","createElement","position","top","left","objectFit","objectPosition","propTypes","object","func","Image","_React$Component","_this","call","this","isVisible","IOSupported","fadeIn","seenBefore","critical","hasNoScript","state","imgLoaded","imageRef","createRef","handleImageLoaded","bind","handleRef","_proto","prototype","componentDidMount","onStartLoad","wasCached","img","current","complete","_this2","imageInCache","setState","render","_convertProps","className","_convertProps$style","_convertProps$imgStyl","imgStyle","_convertProps$placeho","placeholderStyle","placeholderClassName","backgroundColor","Tag","itemProp","bgColor","imagePlaceholderStyle","transition","imageStyle","placeholderImageProps","image","overflow","key","JSON","stringify","paddingBottom","aspectRatio","bottom","right","base64","tracedSVG","type","dangerouslySetInnerHTML","__html","_image","divStyle","display","Component","defaultProps","fixedObject","shape","number","isRequired","string","srcWebp","fluidObject","bool","oneOfType","_default","module","Object","defineProperty","value","pkgName","getGatsbyImageProps_1","getFluidGatsbyImage","getFixedGatsbyImage","__rest","s","e","t","p","hasOwnProperty","indexOf","getOwnPropertySymbols","i","length","parseUrl","ImageFormat","DEFAULT_FIXED_WIDTH","DEFAULT_FLUID_MAX_WIDTH","idPattern","sizeMultipliersFixed","sizeMultipliersFluid","getBasicImageProps","node","loc","obj","id","asset","_ref","_id","test","assetId","dimensions","extension","split","map","num","parseInt","metadata","url","stub","projectId","dataset","buildImageUrl","convertToFormat","toFormat","parsed","pathname","replace","isConvertedToTarget","query","fm","isOriginal","_a","params","set","toString","newQuery","assign","isWebP","isConverted","includes","args","lqip","desiredAspectRatio","forceConvert","srcSets","scale","Math","round","filter","currentWidth","reduce","acc","resolution","currentHeight","imgUrl","webpUrl","baseUrl","webp","base","outputHeight","join","maxWidth","maxHeight","concat","baseSrc","global","required","qs","protocolre","slashes","rules","address","NaN","undefined","ignore","hash","lolcation","location","self","finaldestination","protocol","Url","unescape","href","extractProtocol","match","exec","toLowerCase","rest","parser","relative","extracted","parse","instruction","index","instructions","slice","charAt","path","last","unshift","up","splice","resolve","port","host","hostname","username","password","auth","origin","part","fn","pop","char","ins","result","undef","has","decode","input","decodeURIComponent","prefix","pairs","isNaN","encodeURIComponent"],"mappings":"0FAEA,IAAAA,EAA6BC,EAAQ,GAErCC,EAAAC,YAAA,EACAD,EAAAE,aAAA,EAEA,IA+CAC,EA/CAC,EAAAN,EAA6CC,EAAQ,IAErDM,EAAAP,EAAqDC,EAAQ,KAE7DO,EAAAR,EAA4DC,EAAQ,KAEpEQ,EAAAT,EAAuCC,EAAQ,KAE/CS,EAAAV,EAAoCC,EAAQ,IAE5CU,EAAAX,EAAwCC,EAAQ,IAGhDW,EAAA,SAAAC,GACA,IAAAC,GAAA,EAAAL,EAAAL,SAAA,GAAgDS,GAYhD,OAVAC,EAAAC,cACAD,EAAAE,MAAAF,EAAAC,mBACAD,EAAAC,aAGAD,EAAAG,QACAH,EAAAI,MAAAJ,EAAAG,aACAH,EAAAG,OAGAH,GAKAK,EAAA,GAEAC,EAAA,SAAAP,GACA,IAAAC,EAAAF,EAAAC,GAEAQ,EAAAP,EAAAI,MAAAJ,EAAAI,MAAAG,IAAAP,EAAAE,MAAAK,IACA,OAAAF,EAAAE,KAAA,GAWAC,EAAA,GAwBA,IAAAC,EAAA,SAAAC,EAAAC,SArBA,IAAApB,GAAA,oBAAAqB,eAAAC,uBACAtB,EAAA,IAAAqB,OAAAC,qBAAA,SAAAC,GACAA,EAAAC,QAAA,SAAAC,GACAR,EAAAO,QAAA,SAAAE,GACAA,EAAA,KAAAD,EAAAE,SAEAF,EAAAG,gBAAAH,EAAAI,kBAAA,KACA7B,EAAA8B,UAAAJ,EAAA,IACAA,EAAA,WAKK,CACLK,WAAA,WAIA/B,GAIAgC,QAAAb,GACAF,EAAAgB,KAAA,CAAAd,EAAAC,KAGAc,EAAA,SAAA1B,GAGA,IAAAQ,EAAAR,EAAAQ,IAAA,QAAAR,EAAAQ,IAAA,eAEAJ,EAAAJ,EAAAI,MAAA,UAAAJ,EAAAI,MAAA,QACAuB,EAAA3B,EAAA2B,WAAA,sCAAA3B,EAAA2B,WAAA,KAAAvB,EAAA,QACAwB,EAAA5B,EAAA4B,OAAA,WAAA5B,EAAA4B,OAAA,QACAC,EAAA7B,EAAA6B,MAAA,UAAA7B,EAAA6B,MAAA,QACAC,EAAA9B,EAAA8B,IAAA,QAAA9B,EAAA8B,IAAA,eAEAC,EAAA/B,EAAA+B,MAAA,UAAA/B,EAAA+B,MAAA,QACAC,EAAAhC,EAAAgC,OAAA,WAAAhC,EAAAgC,OAAA,QACAC,EAAAjC,EAAAiC,QAAAjC,EAAAiC,QAAA,IAEA,kBAAAN,EAAA,QAAAI,EAAAC,EAAA5B,EAAAwB,EAAApB,EAAAsB,EAAAD,EAAA,mFADA7B,EAAAkC,gBAAAlC,EAAAkC,gBAAA,QACoK,YAAyCD,EAAA,gFAG7ME,EAAAtC,EAAAN,QAAA6C,WAAA,SAAApC,EAAAqC,GACA,IAAAjC,EAAAJ,EAAAI,MACAwB,EAAA5B,EAAA4B,OACApB,EAAAR,EAAAQ,IACA8B,EAAAtC,EAAAsC,MACAC,EAAAvC,EAAAuC,OACAC,EAAAxC,EAAAwC,QACAC,GAAA,EAAA9C,EAAAJ,SAAAS,EAAA,qDACA,OAAAH,EAAAN,QAAAmD,cAAA,SAAA9C,EAAAL,SAAA,CACAa,QACAwB,SACApB,OACGiC,EAAA,CACHF,SACAC,UACAH,MACAC,OAAA,EAAA1C,EAAAL,SAAA,CACAoD,SAAA,WACAC,IAAA,EACAC,KAAA,EACAd,MAAA,OACAC,OAAA,OACAc,UAAA,QACAC,eAAA,UACKT,QAILH,EAAAa,UAAA,CACAV,MAAAxC,EAAAP,QAAA0D,OACAT,QAAA1C,EAAAP,QAAA2D,KACAX,OAAAzC,EAAAP,QAAA2D,MAGA,IAAAC,EAEA,SAAAC,GAGA,SAAAD,EAAAnD,GACA,IAAAqD,EAEAA,EAAAD,EAAAE,KAAAC,KAAAvD,IAAAuD,KAEA,IAAAC,GAAA,EAEAC,GAAA,EACAC,EAAA1D,EAAA0D,OAGAC,EAAApD,EAAAP,IAEA2D,GAAA,oBAAA9C,eAAAC,uBACA0C,GAAA,EACAC,GAAA,GAIA,oBAAA5C,SACA2C,GAAA,GAIAxD,EAAA4D,WACAJ,GAAA,EACAC,GAAA,GAGA,IAAAI,IAAAR,EAAArD,MAAA4D,WAAAP,EAAArD,MAAA0D,QAYA,OAXAL,EAAAS,MAAA,CACAN,YACAO,WA1BA,EA2BAN,cACAC,SACAG,cACAF,cAEAN,EAAAW,SAAAnE,EAAAN,QAAA0E,YACAZ,EAAAa,kBAAAb,EAAAa,kBAAAC,MAAA,EAAAzE,EAAAH,UAAA,EAAAG,EAAAH,SAAA8D,KACAA,EAAAe,UAAAf,EAAAe,UAAAD,MAAA,EAAAzE,EAAAH,UAAA,EAAAG,EAAAH,SAAA8D,KACAA,GA3CA,EAAA5D,EAAAF,SAAA4D,EAAAC,GA8CA,IAAAiB,EAAAlB,EAAAmB,UAoNA,OAlNAD,EAAAE,kBAAA,WAOA,GANAhB,KAAAO,MAAAN,WAAA,mBAAAD,KAAAvD,MAAAwE,aACAjB,KAAAvD,MAAAwE,YAAA,CACAC,UAAAlE,EAAAgD,KAAAvD,SAIAuD,KAAAvD,MAAA4D,SAAA,CACA,IAAAc,EAAAnB,KAAAS,SAAAW,QAEAD,KAAAE,UACArB,KAAAW,sBAKAG,EAAAD,UAAA,SAAA/B,GACA,IAAAwC,EAAAtB,KAEAA,KAAAO,MAAAL,aAAApB,GACA3B,EAAA2B,EAAA,WACA,IAAAyC,EAAAvE,EAAAsE,EAAA7E,OAEA6E,EAAAf,MAAAN,WAAA,mBAAAqB,EAAA7E,MAAAwE,aACAK,EAAA7E,MAAAwE,YAAA,CACAC,UAAAK,IAIAD,EAAAE,SAAA,CACAvB,WAAA,EACAO,UAAAe,OAMAT,EAAAH,kBAAA,WAjLA,IAAAlE,EACAC,EAEAO,EAHAR,EAkLAuD,KAAAvD,MAjLAC,EAAAF,EAAAC,GAEAQ,EAAAP,EAAAI,MAAAJ,EAAAI,MAAAG,IAAAP,EAAAE,MAAAK,IACAF,EAAAE,IAAA,EA+KA+C,KAAAwB,SAAA,CACAhB,WAAA,IAGAR,KAAAO,MAAAH,YACAJ,KAAAwB,SAAA,CACArB,QAAA,IAIAH,KAAAvD,MAAAuC,QACAgB,KAAAvD,MAAAuC,UAIA8B,EAAAW,OAAA,WACA,IAAAC,EAAAlF,EAAAwD,KAAAvD,OACA6B,EAAAoD,EAAApD,MACAC,EAAAmD,EAAAnD,IACAoD,EAAAD,EAAAC,UACAC,EAAAF,EAAA3C,MACAA,OAAA,IAAA6C,EAAA,GAAmDA,EACnDC,EAAAH,EAAAI,SACAA,OAAA,IAAAD,EAAA,GAAwDA,EACxDE,EAAAL,EAAAM,iBACAA,OAAA,IAAAD,EAAA,GAAgEA,EAChEE,EAAAP,EAAAO,qBACAnF,EAAA4E,EAAA5E,MACAF,EAAA8E,EAAA9E,MACAsF,EAAAR,EAAAQ,gBACAC,EAAAT,EAAAS,IACAC,EAAAV,EAAAU,SAEAC,EAAA,kBAAAH,EAAA,YAAAA,EAEAI,GAAA,EAAAjG,EAAAL,SAAA,CACA0C,QAAAsB,KAAAO,MAAAC,UAAA,IACA+B,WAAA,eACA5D,gBAAAqB,KAAAO,MAAAC,UAAA,OAJA,SAKKsB,EAAAE,GACLQ,GAAA,EAAAnG,EAAAL,SAAA,CACA0C,QAAAsB,KAAAO,MAAAC,YAAA,IAAAR,KAAAO,MAAAJ,OAAA,IACAoC,YAAA,IAAAvC,KAAAO,MAAAJ,OAAA,uBACK2B,GACLW,EAAA,CACAnE,QACAC,IAAAyB,KAAAO,MAAAN,UAAA,GAAA1B,EACAQ,MAAAuD,EACAX,UAAAM,GAGA,GAAAnF,EAAA,CACA,IAAA4F,EAAA5F,EACA,OAAAR,EAAAN,QAAAmD,cAAAgD,EAAA,CACAR,cAAA,4BACA5C,OAAA,EAAA1C,EAAAL,SAAA,CACAoD,SAAA,WACAuD,SAAA,UACS5D,GACTD,IAAAkB,KAAAa,UACA+B,IAAA,SAAAC,KAAAC,UAAAJ,EAAArE,SACO/B,EAAAN,QAAAmD,cAAAgD,EAAA,CACPpD,MAAA,CACAP,MAAA,OACAuE,cAAA,IAAAL,EAAAM,YAAA,OAEOX,GAAA/F,EAAAN,QAAAmD,cAAAgD,EAAA,CACP7D,QACAS,MAAA,CACAmD,gBAAAG,EACAjD,SAAA,WACAC,IAAA,EACA4D,OAAA,EACAvE,QAAAsB,KAAAO,MAAAC,UAAA,IACA7B,gBAxCA,QAyCAuE,MAAA,EACA5D,KAAA,KAEOoD,EAAAS,QAAA7G,EAAAN,QAAAmD,cAAAP,GAAA,EAAAvC,EAAAL,SAAA,CACPiB,IAAAyF,EAAAS,QACOV,IAAAC,EAAAU,WAAA9G,EAAAN,QAAAmD,cAAAP,GAAA,EAAAvC,EAAAL,SAAA,CACPiB,IAAAyF,EAAAU,WACOX,IAAAzC,KAAAO,MAAAN,WAAA3D,EAAAN,QAAAmD,cAAA,eAAAuD,EAAAtE,YAAA9B,EAAAN,QAAAmD,cAAA,UACPkE,KAAA,aACAhF,OAAAqE,EAAAtE,WACAvB,MAAA6F,EAAA7F,QACOP,EAAAN,QAAAmD,cAAAP,EAAA,CACPL,MACAD,QACAzB,MAAA6F,EAAA7F,MACAI,IAAAyF,EAAAzF,IACAoB,OAAAqE,EAAArE,OACAU,MAAAyD,EACA1D,IAAAkB,KAAAS,SACAzB,OAAAgB,KAAAW,kBACA1B,QAAAe,KAAAvD,MAAAwC,QACAmD,cACOpC,KAAAO,MAAAD,aAAAhE,EAAAN,QAAAmD,cAAA,YACPmE,wBAAA,CACAC,OAAApF,GAAA,EAAA9B,EAAAL,SAAA,CACAuC,MACAD,SACWoE,QAKX,GAAA9F,EAAA,CACA,IAAA4G,EAAA5G,EACA6G,GAAA,EAAApH,EAAAL,SAAA,CACAoD,SAAA,WACAuD,SAAA,SACAe,QAAA,eACAlF,MAAAgF,EAAAhF,MACAC,OAAA+E,EAAA/E,QACOM,GAMP,MAJA,YAAAA,EAAA2E,gBACAD,EAAAC,QAGApH,EAAAN,QAAAmD,cAAAgD,EAAA,CACAR,cAAA,4BACA5C,MAAA0E,EACA3E,IAAAkB,KAAAa,UACA+B,IAAA,SAAAC,KAAAC,UAAAU,EAAAnF,SACOgE,GAAA/F,EAAAN,QAAAmD,cAAAgD,EAAA,CACP7D,QACAS,MAAA,CACAmD,gBAAAG,EACA7D,MAAAgF,EAAAhF,MACAE,QAAAsB,KAAAO,MAAAC,UAAA,IACA7B,gBAlGA,QAmGAF,OAAA+E,EAAA/E,UAEO+E,EAAAL,QAAA7G,EAAAN,QAAAmD,cAAAP,GAAA,EAAAvC,EAAAL,SAAA,CACPiB,IAAAuG,EAAAL,QACOV,IAAAe,EAAAJ,WAAA9G,EAAAN,QAAAmD,cAAAP,GAAA,EAAAvC,EAAAL,SAAA,CACPiB,IAAAuG,EAAAJ,WACOX,IAAAzC,KAAAO,MAAAN,WAAA3D,EAAAN,QAAAmD,cAAA,eAAAqE,EAAApF,YAAA9B,EAAAN,QAAAmD,cAAA,UACPkE,KAAA,aACAhF,OAAAmF,EAAApF,WACAvB,MAAA2G,EAAA3G,QACOP,EAAAN,QAAAmD,cAAAP,EAAA,CACPL,MACAD,QACAE,MAAAgF,EAAAhF,MACAC,OAAA+E,EAAA/E,OACA5B,MAAA2G,EAAA3G,MACAI,IAAAuG,EAAAvG,IACAoB,OAAAmF,EAAAnF,OACAU,MAAAyD,EACA1D,IAAAkB,KAAAS,SACAzB,OAAAgB,KAAAW,kBACA1B,QAAAe,KAAAvD,MAAAwC,QACAmD,cACOpC,KAAAO,MAAAD,aAAAhE,EAAAN,QAAAmD,cAAA,YACPmE,wBAAA,CACAC,OAAApF,GAAA,EAAA9B,EAAAL,SAAA,CACAuC,MACAD,QACAE,MAAAgF,EAAAhF,MACAC,OAAA+E,EAAA/E,QACW+E,QAKX,aAGA5D,EAnQA,CAoQCtD,EAAAN,QAAA2H,WAED/D,EAAAgE,aAAA,CACAvD,UAAA,EACAF,QAAA,EACA5B,IAAA,GACA4D,IAAA,OAGA,IAAA0B,EAAAtH,EAAAP,QAAA8H,MAAA,CACAtF,MAAAjC,EAAAP,QAAA+H,OAAAC,WACAvF,OAAAlC,EAAAP,QAAA+H,OAAAC,WACA/G,IAAAV,EAAAP,QAAAiI,OAAAD,WACA3F,OAAA9B,EAAAP,QAAAiI,OAAAD,WACAb,OAAA5G,EAAAP,QAAAiI,OACAb,UAAA7G,EAAAP,QAAAiI,OACAC,QAAA3H,EAAAP,QAAAiI,OACA7F,WAAA7B,EAAAP,QAAAiI,SAGAE,EAAA5H,EAAAP,QAAA8H,MAAA,CACAd,YAAAzG,EAAAP,QAAA+H,OAAAC,WACA/G,IAAAV,EAAAP,QAAAiI,OAAAD,WACA3F,OAAA9B,EAAAP,QAAAiI,OAAAD,WACAnH,MAAAN,EAAAP,QAAAiI,OAAAD,WACAb,OAAA5G,EAAAP,QAAAiI,OACAb,UAAA7G,EAAAP,QAAAiI,OACAC,QAAA3H,EAAAP,QAAAiI,OACA7F,WAAA7B,EAAAP,QAAAiI,SAGArE,EAAAH,UAAA,CACA9C,YAAAkH,EACAhH,MAAAsH,EACAvH,MAAAiH,EACA/G,MAAAqH,EACAhE,OAAA5D,EAAAP,QAAAoI,KACA9F,MAAA/B,EAAAP,QAAAiI,OACA1F,IAAAhC,EAAAP,QAAAiI,OACAtC,UAAApF,EAAAP,QAAAqI,UAAA,CAAA9H,EAAAP,QAAAiI,OAAA1H,EAAAP,QAAA0D,SAEAW,SAAA9D,EAAAP,QAAAoI,KACArF,MAAAxC,EAAAP,QAAA0D,OACAoC,SAAAvF,EAAAP,QAAA0D,OACAsC,iBAAAzF,EAAAP,QAAA0D,OACAuC,qBAAA1F,EAAAP,QAAAiI,OACA/B,gBAAA3F,EAAAP,QAAAqI,UAAA,CAAA9H,EAAAP,QAAAiI,OAAA1H,EAAAP,QAAAoI,OACApF,OAAAzC,EAAAP,QAAA2D,KACAV,QAAA1C,EAAAP,QAAA2D,KACAsB,YAAA1E,EAAAP,QAAA2D,KACAwC,IAAA5F,EAAAP,QAAAiI,OACA7B,SAAA7F,EAAAP,QAAAiI,QAEA,IAAAK,EAAA1E,EACA9D,EAAAE,QAAAsI,uBCpcAC,EAAAzI,QAAiBD,EAAQ,uCCCzB2I,OAAAC,eAAA3I,EAAA,cAA8C4I,OAAA,IAC9C5I,EAAA6I,QAAA,uBACA,IAAAC,EAA4B/I,EAAQ,KACpCC,EAAA+I,oBAAAD,EAAAC,oBACA/I,EAAAgJ,oBAAAF,EAAAE,sDCJA,IAAAC,EACA/E,WAAA+E,QACA,SAAAC,EAAAC,GACA,IAAAC,EAAA,GACA,QAAAC,KAAAH,EAAAR,OAAAzD,UAAAqE,eAAArF,KAAAiF,EAAAG,IAAAF,EAAAI,QAAAF,GAAA,IAAAD,EAAAC,GAAAH,EAAAG,IACA,SAAAH,GAAA,mBAAAR,OAAAc,sBACA,KAAAC,EAAA,MAAAJ,EAAAX,OAAAc,sBAAAN,GAA0DO,EAAAJ,EAAAK,OAAcD,IACxEN,EAAAI,QAAAF,EAAAI,IAAA,IAAAL,EAAAC,EAAAI,IAAAP,EAAAG,EAAAI,KACA,OAAAL,GAEAV,OAAAC,eAAA3I,EAAA,cAA8C4I,OAAA,IAC9C,MAAAe,EAAiB5J,EAAQ,KAGzB,IAAA6J,EAFA5J,EAAA6J,oBAAA,IACA7J,EAAA8J,wBAAA,IAEC,SAAAF,GACDA,EAAA,aACAA,EAAA,YACAA,EAAA,UACAA,EAAA,UAJC,CAKAA,MAAA,KACD,MAAAG,EAAA,sCACAC,EAAA,YACAC,EAAA,mBAQA,SAAAC,EAAAC,EAAAC,GACA,IAAAD,EACA,SAEA,MAAAE,EAAAF,EACAnH,EAAAmH,EACA9E,EAAA8E,EACA,IAAAG,EAAA,GASA,OAPAA,EADA,iBAAAH,EACAA,EACGE,EAAAE,MACHF,EAAAE,MAAAC,MAAAH,EAAAE,MAAAE,IAEAzH,EAAAwH,MAAAnF,EAAAoF,MAEAV,EAAAW,KAAAJ,IAEA,SAEA,OAAAK,EAAAC,EAAAC,GAAAP,EAAAQ,MAAA,MACApI,EAAAC,GAAAiI,EAAAE,MAAA,KAAAC,IAAAC,GAAAC,SAAAD,EAAA,KACA9D,EAAAxE,EAAAC,EACAuI,EAAA7F,EAAA6F,UAAA,CAAoCN,WAAA,CAAalI,QAAAC,SAAAuE,gBAEjD,OACAiE,IAFA9F,EAAA8F,KA9BA,SAAAf,EAAAgB,GACA,MAAAC,UAASA,EAAAC,WAAmBlB,GAC5BO,QAASA,EAAAE,YAAAK,YAA6BE,GACtC1I,MAASA,EAAAC,UAAcuI,EAAAN,WAEvB,sCAAoBS,KAAaC,KAAWX,KAAWjI,KAASC,KAAUkI,IAyB1EU,CAAAnB,EAAA,CAA6Ce,IAAA,GAAAR,UAAAE,YAAAK,aAG7CP,UACAE,YACAK,YAGA,SAAAM,EAAAL,EAAAM,GACA,MAAAC,EAAA/B,EAAAwB,GAAA,GAEAN,EADAa,EAAAC,SAAAC,QAAA,WACAA,QAAA,WACAC,EAAAH,EAAAI,MAAAC,KAAAN,EACAO,EAAAnB,IAAAY,EAEA,GAAAI,GAAAG,EAAA,CACA,MAAAC,EAAAP,EAAAI,OACAC,GAAOA,GAAGE,EACVC,EAAAjD,EAAAgD,EAAA,QAEA,OADAP,EAAAS,IAAA,QAAAD,GACAR,EAAAU,WAEA,GAAAP,GAAAG,EACA,OAAAb,EAEA,MAAAkB,EAAA3D,OAAA4D,OAAA,GAAmCZ,EAAAI,MAAA,CAAiBC,GAAAN,IAEpD,OADAC,EAAAS,IAAA,QAAAE,GACAX,EAAAU,WAEA,SAAAG,EAAApB,GACA,MAAAqB,EAAArB,EAAAsB,SAAA,WACAT,EAAA,0BAAAtB,KAAAS,GACA,OAAAqB,GAAAR,EAiDAhM,EAAAgJ,oBA/CA,SAAApC,EAAA8F,EAAAtC,GACA,MAAAzJ,EAAAuJ,EAAAtD,EAAAwD,GACA,IAAAzJ,EACA,YAEA,MAAA+B,EAAAgK,EAAAhK,OAAA1C,EAAA6J,oBACAlH,EAAA+J,EAAA/J,QACAwI,IAASA,EAAAD,WAAAL,aAAyBlK,GAClCiK,WAASA,EAAA+B,QAAiBzB,EAC1B,IAAA0B,EAAAhC,EAAA1D,YAEAwF,EAAA/J,SACAiK,EAAAlK,EAAAgK,EAAA/J,QAEA,IAAAkK,EAAA,KACAH,EAAAjB,SACAoB,EAAAH,EAAAjB,SACGc,EAAA5L,EAAAwK,OACH0B,EAAA,OAEA,MAEAC,EAFA9C,EAAAe,IAAAgC,GAAAC,KAAAC,MAAAvK,EAAAqK,IAGAG,OAAAC,KAAAvC,EAAAlI,OACA0K,OAAA,CAAAC,EAAAF,EAAA1D,KACA,MAAA6D,KAA4BtD,EAAAP,MAC5B8D,EAAAP,KAAAC,MAAAE,EAAAP,GACAY,KAAwBrC,OAASgC,OAAkBI,aACnDE,EAAAjC,EAAAgC,EAAA,QACAE,EAAAlC,EAAAgC,EAAAX,GAAAlM,EAAAkK,WAGA,OAFAwC,EAAAM,KAAAvL,QAAuBqL,KAAWH,KAClCD,EAAAO,KAAAxL,QAAuBsL,KAAWJ,KAClCD,GAXA,CAAmBM,KAAA,GAAAC,KAAA,KAanBC,EAAAb,KAAAC,MAAAtK,GAAAD,EAAAkK,GACAY,KAAoBrC,OAASzI,OAAWmL,aACxC,OACAxG,OAAAsF,GAAA,KACAzF,YAAA0F,EACAlK,MAAAsK,KAAAC,MAAAvK,GACAC,OAAAkL,EACA1M,IAAAqK,EAAAgC,EAAAX,GAAAhC,GACAzC,QAAAoD,EAAAgC,EAAA,QACAjL,OAAAuK,EAAAc,KAAAE,KAAA,aACAxL,WAAAwK,EAAAa,KAAAG,KAAA,eAsDA9N,EAAA+I,oBAlDA,SAAAnC,EAAA8F,EAAAtC,GACA,MAAAzJ,EAAAuJ,EAAAtD,EAAAwD,GACA,IAAAzJ,EACA,YAEA,MAAAwK,IAASA,EAAAD,WAAAL,aAAyBlK,GAClCiK,WAASA,EAAA+B,QAAiBzB,EAC1B6C,EAAArB,EAAAqB,UAAA/N,EAAA8J,wBACA,IAAA8C,EAAAhC,EAAA1D,YAEAwF,EAAAsB,YACApB,EAAAmB,EAAArB,EAAAsB,WAEA,MAAAA,EAAAtB,EAAAsB,WAAAhB,KAAAC,MAAAc,EAAAnD,EAAA1D,aACA,IAAA2F,EAAA,KACAH,EAAAjB,SACAoB,EAAAH,EAAAjB,SACGc,EAAA5L,EAAAwK,OACH0B,EAAA,OAEA,MAAA9L,EAAA2L,EAAA3L,sBAA6CgN,eAAsBA,MAMnEjB,EALA7C,EACAc,IAAAgC,GAAAC,KAAAC,MAAAc,EAAAhB,IACAG,OAAAxK,KAAAkI,EAAAlI,OACAuL,OAAArD,EAAAlI,OAGAwK,OAAAC,MAAAvC,EAAAlI,OACA0K,OAAA,CAAAC,EAAAF,KACA,MAAAI,EAAAP,KAAAC,MAAAE,EAAAP,GACAY,KAAwBrC,OAASgC,OAAkBI,aACnDE,EAAAjC,EAAAgC,EAAA,QACAE,EAAAlC,EAAAgC,EAAAX,GAAAlM,EAAAkK,WAGA,OAFAwC,EAAAM,KAAAvL,QAAuBqL,KAAWN,MAClCE,EAAAO,KAAAxL,QAAuBsL,KAAWP,MAClCE,GAVA,CAAmBM,KAAA,GAAAC,KAAA,KAYnBM,KAAqB/C,OAAS4C,OAAcC,aAC5C7M,EAAAqK,EAAA0C,EAAArB,GAAAhC,GACAzC,EAAAoD,EAAA0C,EAAA,QACA,OACA7G,OAAAsF,GAAA,KACAzF,YAAA0F,EACAzL,MACAiH,UACA7F,OAAAuK,EAAAc,KAAAE,KAAA,aACAxL,WAAAwK,EAAAa,KAAAG,KAAA,aACA/M,6CCxLA,SAAAoN,GAEA,IAAAC,EAAerO,EAAQ,KACvBsO,EAAStO,EAAQ,KACjBuO,EAAA,0CACAC,EAAA,gCAcAC,EAAA,CACA,aACA,cACA,SAAAC,GACA,OAAAA,EAAA7C,QAAA,WAEA,iBACA,eACA,CAAA8C,IAAA,YAAAC,EAAA,KACA,uBAAAA,EAAA,GACA,CAAAD,IAAA,gBAAAC,EAAA,MAWAC,EAAA,CAAcC,KAAA,EAAA/C,MAAA,GAcd,SAAAgD,EAAA1E,GACA,IAYAtD,EALAiI,GALA,oBAAAvN,mBACA,IAAA2M,IACA,oBAAAa,UACA,IAEAD,UAAA,GAGAE,EAAA,GACA1H,SAHA6C,KAAA2E,GAMA,aAAA3E,EAAA8E,SACAD,EAAA,IAAAE,EAAAC,SAAAhF,EAAAuB,UAAA,SACG,cAAApE,EAEH,IAAAT,KADAmI,EAAA,IAAAE,EAAA/E,EAAA,IACAwE,SAAAK,EAAAnI,QACG,cAAAS,EAAA,CACH,IAAAT,KAAAsD,EACAtD,KAAA8H,IACAK,EAAAnI,GAAAsD,EAAAtD,SAGA6H,IAAAM,EAAAV,UACAU,EAAAV,UAAA7D,KAAAN,EAAAiF,OAIA,OAAAJ,EAkBA,SAAAK,EAAAb,GACA,IAAAc,EAAAjB,EAAAkB,KAAAf,GAEA,OACAS,SAAAK,EAAA,GAAAA,EAAA,GAAAE,cAAA,GACAlB,UAAAgB,EAAA,GACAG,KAAAH,EAAA,IAoDA,SAAAJ,EAAAV,EAAAM,EAAAY,GACA,KAAAzL,gBAAAiL,GACA,WAAAA,EAAAV,EAAAM,EAAAY,GAGA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAlJ,EACAmJ,EAAAzB,EAAA0B,QACA3I,SAAAwH,EACA5D,EAAAjH,KACAuF,EAAA,EAqCA,IAxBA,WAAAlC,GAAA,WAAAA,IACAoI,EAAAZ,EACAA,EAAA,MAGAY,GAAA,mBAAAA,MAAAtB,EAAAyB,OAEAf,EAAAD,EAAAC,GAMAa,IADAC,EAAAP,EAAAb,GAAA,KACAS,WAAAW,EAAAtB,QACApD,EAAAoD,QAAAsB,EAAAtB,SAAAqB,GAAAb,EAAAR,QACApD,EAAA+D,SAAAW,EAAAX,UAAAH,EAAAG,UAAA,GACAT,EAAAoB,EAAAH,KAMAG,EAAAtB,UAAA0B,EAAA,wBAEQxG,EAAAwG,EAAAvG,OAAyBD,IAGjC,mBAFAsG,EAAAE,EAAAxG,KAOAqG,EAAAC,EAAA,GACAjJ,EAAAiJ,EAAA,GAEAD,KACA3E,EAAArE,GAAA2H,EACK,iBAAAqB,IACLE,EAAAvB,EAAAlF,QAAAuG,MACA,iBAAAC,EAAA,IACA5E,EAAArE,GAAA2H,EAAAyB,MAAA,EAAAF,GACAvB,IAAAyB,MAAAF,EAAAD,EAAA,MAEA5E,EAAArE,GAAA2H,EAAAyB,MAAAF,GACAvB,IAAAyB,MAAA,EAAAF,MAGKA,EAAAF,EAAAN,KAAAf,MACLtD,EAAArE,GAAAkJ,EAAA,GACAvB,IAAAyB,MAAA,EAAAF,UAGA7E,EAAArE,GAAAqE,EAAArE,IACA8I,GAAAG,EAAA,IAAAhB,EAAAjI,IAAA,GAOAiJ,EAAA,KAAA5E,EAAArE,GAAAqE,EAAArE,GAAA2I,gBAhCAhB,EAAAsB,EAAAtB,GAwCAkB,IAAAxE,EAAAW,MAAA6D,EAAAxE,EAAAW,QAMA8D,GACAb,EAAAR,SACA,MAAApD,EAAAQ,SAAAwE,OAAA,KACA,KAAAhF,EAAAQ,UAAA,KAAAoD,EAAApD,YAEAR,EAAAQ,SA7IA,SAAAiE,EAAAhC,GAOA,IANA,IAAAwC,GAAAxC,GAAA,KAAA9C,MAAA,KAAAoF,MAAA,MAAAjC,OAAA2B,EAAA9E,MAAA,MACArB,EAAA2G,EAAA1G,OACA2G,EAAAD,EAAA3G,EAAA,GACA6G,GAAA,EACAC,EAAA,EAEA9G,KACA,MAAA2G,EAAA3G,GACA2G,EAAAI,OAAA/G,EAAA,GACK,OAAA2G,EAAA3G,IACL2G,EAAAI,OAAA/G,EAAA,GACA8G,KACKA,IACL,IAAA9G,IAAA6G,GAAA,GACAF,EAAAI,OAAA/G,EAAA,GACA8G,KAOA,OAHAD,GAAAF,EAAAE,QAAA,IACA,MAAAD,GAAA,OAAAA,GAAAD,EAAAhO,KAAA,IAEAgO,EAAAtC,KAAA,KAsHA2C,CAAAtF,EAAAQ,SAAAoD,EAAApD,WAQAyC,EAAAjD,EAAAuF,KAAAvF,EAAA+D,YACA/D,EAAAwF,KAAAxF,EAAAyF,SACAzF,EAAAuF,KAAA,IAMAvF,EAAA0F,SAAA1F,EAAA2F,SAAA,GACA3F,EAAA4F,OACAhB,EAAA5E,EAAA4F,KAAAjG,MAAA,KACAK,EAAA0F,SAAAd,EAAA,OACA5E,EAAA2F,SAAAf,EAAA,QAGA5E,EAAA6F,OAAA7F,EAAA+D,UAAA/D,EAAAwF,MAAA,UAAAxF,EAAA+D,SACA/D,EAAA+D,SAAA,KAAA/D,EAAAwF,KACA,OAKAxF,EAAAkE,KAAAlE,EAAAiB,WAiIA+C,EAAAlK,UAAA,CAAiBkH,IAjHjB,SAAA8E,EAAArI,EAAAsI,GACA,IAAA/F,EAAAjH,KAEA,OAAA+M,GACA,YACA,iBAAArI,KAAAc,SACAd,GAAAsI,GAAA7C,EAAAyB,OAAAlH,IAGAuC,EAAA8F,GAAArI,EACA,MAEA,WACAuC,EAAA8F,GAAArI,EAEAwF,EAAAxF,EAAAuC,EAAA+D,UAGOtG,IACPuC,EAAAwF,KAAAxF,EAAAyF,SAAA,IAAAhI,IAHAuC,EAAAwF,KAAAxF,EAAAyF,SACAzF,EAAA8F,GAAA,IAKA,MAEA,eACA9F,EAAA8F,GAAArI,EAEAuC,EAAAuF,OAAA9H,GAAA,IAAAuC,EAAAuF,MACAvF,EAAAwF,KAAA/H,EACA,MAEA,WACAuC,EAAA8F,GAAArI,EAEA,QAAA8B,KAAA9B,IACAA,IAAAkC,MAAA,KACAK,EAAAuF,KAAA9H,EAAAuI,MACAhG,EAAAyF,SAAAhI,EAAAkF,KAAA,OAEA3C,EAAAyF,SAAAhI,EACAuC,EAAAuF,KAAA,IAGA,MAEA,eACAvF,EAAA+D,SAAAtG,EAAA6G,cACAtE,EAAAoD,SAAA2C,EACA,MAEA,eACA,WACA,GAAAtI,EAAA,CACA,IAAAwI,EAAA,aAAAH,EAAA,QACA9F,EAAA8F,GAAArI,EAAAuH,OAAA,KAAAiB,IAAAxI,SAEAuC,EAAA8F,GAAArI,EAEA,MAEA,QACAuC,EAAA8F,GAAArI,EAGA,QAAAa,EAAA,EAAiBA,EAAA+E,EAAA9E,OAAkBD,IAAA,CACnC,IAAA4H,EAAA7C,EAAA/E,GAEA4H,EAAA,KAAAlG,EAAAkG,EAAA,IAAAlG,EAAAkG,EAAA,IAAA5B,eASA,OANAtE,EAAA6F,OAAA7F,EAAA+D,UAAA/D,EAAAwF,MAAA,UAAAxF,EAAA+D,SACA/D,EAAA+D,SAAA,KAAA/D,EAAAwF,KACA,OAEAxF,EAAAkE,KAAAlE,EAAAiB,WAEAjB,GAqCiBiB,SA3BjB,SAAApF,GACAA,GAAA,mBAAAA,MAAAqH,EAAArH,WAEA,IAAA8E,EACAX,EAAAjH,KACAgL,EAAA/D,EAAA+D,SAEAA,GAAA,MAAAA,EAAAiB,OAAAjB,EAAAxF,OAAA,KAAAwF,GAAA,KAEA,IAAAoC,EAAApC,GAAA/D,EAAAoD,QAAA,SAeA,OAbApD,EAAA0F,WACAS,GAAAnG,EAAA0F,SACA1F,EAAA2F,WAAAQ,GAAA,IAAAnG,EAAA2F,UACAQ,GAAA,KAGAA,GAAAnG,EAAAwF,KAAAxF,EAAAQ,UAEAG,EAAA,iBAAAX,EAAAW,MAAA9E,EAAAmE,EAAAW,OAAAX,EAAAW,SACAwF,GAAA,MAAAxF,EAAAqE,OAAA,OAAArE,KAEAX,EAAA0D,OAAAyC,GAAAnG,EAAA0D,MAEAyC,IASAnC,EAAAG,kBACAH,EAAAJ,SAAAD,EACAK,EAAAd,KAEA5F,EAAAzI,QAAAmP,uDCpaA1G,EAAAzI,QAAA,SAAA0Q,EAAAxB,GAIA,GAHAA,IAAApE,MAAA,UACA4F,MAEA,SAEA,OAAAxB,GACA,WACA,SACA,YAAAwB,EAEA,YACA,UACA,aAAAA,EAEA,UACA,YAAAA,EAEA,aACA,YAAAA,EAEA,WACA,SAGA,WAAAA,qCClCA,IACAa,EADAC,EAAA9I,OAAAzD,UAAAqE,eAUA,SAAAmI,EAAAC,GACA,OAAAC,mBAAAD,EAAA9F,QAAA,YAyEA5L,EAAAgH,UAlCA,SAAAqD,EAAAuH,GACAA,KAAA,GAEA,IACAhJ,EACA9B,EAFA+K,EAAA,GASA,IAAA/K,IAFA,iBAAA8K,MAAA,KAEAvH,EACAmH,EAAAvN,KAAAoG,EAAAvD,MACA8B,EAAAyB,EAAAvD,KAMA,OAAA8B,OAAA2I,IAAAO,MAAAlJ,KACAA,EAAA,IAGAiJ,EAAAzP,KAAA2P,mBAAAjL,GAAA,IAAAiL,mBAAAnJ,KAIA,OAAAiJ,EAAAnI,OAAAkI,EAAAC,EAAA/D,KAAA,SAOA9N,EAAA8P,MAhEA,SAAAhE,GAKA,IAJA,IAEAmF,EAFAtB,EAAA,sBACA2B,EAAA,GAGAL,EAAAtB,EAAAH,KAAA1D,IAAA,CACA,IAAAhF,EAAA2K,EAAAR,EAAA,IACArI,EAAA6I,EAAAR,EAAA,IAOAnK,KAAAwK,IACAA,EAAAxK,GAAA8B,GAGA,OAAA0I","file":"3-a90a220de502e77f79b4.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\n// Handle legacy names for image queries.\nvar convertProps = function convertProps(props) {\n  var convertedProps = (0, _extends2.default)({}, props);\n\n  if (convertedProps.resolutions) {\n    convertedProps.fixed = convertedProps.resolutions;\n    delete convertedProps.resolutions;\n  }\n\n  if (convertedProps.sizes) {\n    convertedProps.fluid = convertedProps.sizes;\n    delete convertedProps.sizes;\n  }\n\n  return convertedProps;\n}; // Cache if we've seen an image before so we don't bother with\n// lazy-loading & fading in on subsequent mounts.\n\n\nvar imageCache = {};\n\nvar inImageCache = function inImageCache(props) {\n  var convertedProps = convertProps(props); // Find src\n\n  var src = convertedProps.fluid ? convertedProps.fluid.src : convertedProps.fixed.src;\n  return imageCache[src] || false;\n};\n\nvar activateCacheForImage = function activateCacheForImage(props) {\n  var convertedProps = convertProps(props); // Find src\n\n  var src = convertedProps.fluid ? convertedProps.fluid.src : convertedProps.fixed.src;\n  imageCache[src] = true;\n};\n\nvar io;\nvar listeners = [];\n\nfunction getIO() {\n  if (typeof io === \"undefined\" && typeof window !== \"undefined\" && window.IntersectionObserver) {\n    io = new window.IntersectionObserver(function (entries) {\n      entries.forEach(function (entry) {\n        listeners.forEach(function (l) {\n          if (l[0] === entry.target) {\n            // Edge doesn't currently support isIntersecting, so also test for an intersectionRatio > 0\n            if (entry.isIntersecting || entry.intersectionRatio > 0) {\n              io.unobserve(l[0]);\n              l[1]();\n            }\n          }\n        });\n      });\n    }, {\n      rootMargin: \"200px\"\n    });\n  }\n\n  return io;\n}\n\nvar listenToIntersections = function listenToIntersections(el, cb) {\n  getIO().observe(el);\n  listeners.push([el, cb]);\n};\n\nvar noscriptImg = function noscriptImg(props) {\n  // Check if prop exists before adding each attribute to the string output below to prevent\n  // HTML validation issues caused by empty values like width=\"\" and height=\"\"\n  var src = props.src ? \"src=\\\"\" + props.src + \"\\\" \" : \"src=\\\"\\\" \"; // required attribute\n\n  var sizes = props.sizes ? \"sizes=\\\"\" + props.sizes + \"\\\" \" : \"\";\n  var srcSetWebp = props.srcSetWebp ? \"<source type='image/webp' srcset=\\\"\" + props.srcSetWebp + \"\\\" \" + sizes + \"/>\" : \"\";\n  var srcSet = props.srcSet ? \"srcset=\\\"\" + props.srcSet + \"\\\" \" : \"\";\n  var title = props.title ? \"title=\\\"\" + props.title + \"\\\" \" : \"\";\n  var alt = props.alt ? \"alt=\\\"\" + props.alt + \"\\\" \" : \"alt=\\\"\\\" \"; // required attribute\n\n  var width = props.width ? \"width=\\\"\" + props.width + \"\\\" \" : \"\";\n  var height = props.height ? \"height=\\\"\" + props.height + \"\\\" \" : \"\";\n  var opacity = props.opacity ? props.opacity : \"1\";\n  var transitionDelay = props.transitionDelay ? props.transitionDelay : \"0.5s\";\n  return \"<picture>\" + srcSetWebp + \"<img \" + width + height + sizes + srcSet + src + alt + title + \"style=\\\"position:absolute;top:0;left:0;transition:opacity 0.5s;transition-delay:\" + transitionDelay + \";opacity:\" + opacity + \";width:100%;height:100%;object-fit:cover;object-position:center\\\"/></picture>\";\n};\n\nvar Img = _react.default.forwardRef(function (props, ref) {\n  var sizes = props.sizes,\n      srcSet = props.srcSet,\n      src = props.src,\n      style = props.style,\n      onLoad = props.onLoad,\n      onError = props.onError,\n      otherProps = (0, _objectWithoutPropertiesLoose2.default)(props, [\"sizes\", \"srcSet\", \"src\", \"style\", \"onLoad\", \"onError\"]);\n  return _react.default.createElement(\"img\", (0, _extends2.default)({\n    sizes: sizes,\n    srcSet: srcSet,\n    src: src\n  }, otherProps, {\n    onLoad: onLoad,\n    onError: onError,\n    ref: ref,\n    style: (0, _extends2.default)({\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      objectFit: \"cover\",\n      objectPosition: \"center\"\n    }, style)\n  }));\n});\n\nImg.propTypes = {\n  style: _propTypes.default.object,\n  onError: _propTypes.default.func,\n  onLoad: _propTypes.default.func\n};\n\nvar Image =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(Image, _React$Component);\n\n  function Image(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this; // default settings for browser without Intersection Observer available\n\n    var isVisible = true;\n    var imgLoaded = false;\n    var IOSupported = false;\n    var fadeIn = props.fadeIn; // If this image has already been loaded before then we can assume it's\n    // already in the browser cache so it's cheap to just show directly.\n\n    var seenBefore = inImageCache(props); // browser with Intersection Observer available\n\n    if (!seenBefore && typeof window !== \"undefined\" && window.IntersectionObserver) {\n      isVisible = false;\n      IOSupported = true;\n    } // Never render image during SSR\n\n\n    if (typeof window === \"undefined\") {\n      isVisible = false;\n    } // Force render for critical images\n\n\n    if (props.critical) {\n      isVisible = true;\n      IOSupported = false;\n    }\n\n    var hasNoScript = !(_this.props.critical && !_this.props.fadeIn);\n    _this.state = {\n      isVisible: isVisible,\n      imgLoaded: imgLoaded,\n      IOSupported: IOSupported,\n      fadeIn: fadeIn,\n      hasNoScript: hasNoScript,\n      seenBefore: seenBefore\n    };\n    _this.imageRef = _react.default.createRef();\n    _this.handleImageLoaded = _this.handleImageLoaded.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));\n    _this.handleRef = _this.handleRef.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));\n    return _this;\n  }\n\n  var _proto = Image.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    if (this.state.isVisible && typeof this.props.onStartLoad === \"function\") {\n      this.props.onStartLoad({\n        wasCached: inImageCache(this.props)\n      });\n    }\n\n    if (this.props.critical) {\n      var img = this.imageRef.current;\n\n      if (img && img.complete) {\n        this.handleImageLoaded();\n      }\n    }\n  };\n\n  _proto.handleRef = function handleRef(ref) {\n    var _this2 = this;\n\n    if (this.state.IOSupported && ref) {\n      listenToIntersections(ref, function () {\n        var imageInCache = inImageCache(_this2.props);\n\n        if (!_this2.state.isVisible && typeof _this2.props.onStartLoad === \"function\") {\n          _this2.props.onStartLoad({\n            wasCached: imageInCache\n          });\n        }\n\n        _this2.setState({\n          isVisible: true,\n          imgLoaded: imageInCache\n        });\n      });\n    }\n  };\n\n  _proto.handleImageLoaded = function handleImageLoaded() {\n    activateCacheForImage(this.props);\n    this.setState({\n      imgLoaded: true\n    });\n\n    if (this.state.seenBefore) {\n      this.setState({\n        fadeIn: false\n      });\n    }\n\n    if (this.props.onLoad) {\n      this.props.onLoad();\n    }\n  };\n\n  _proto.render = function render() {\n    var _convertProps = convertProps(this.props),\n        title = _convertProps.title,\n        alt = _convertProps.alt,\n        className = _convertProps.className,\n        _convertProps$style = _convertProps.style,\n        style = _convertProps$style === void 0 ? {} : _convertProps$style,\n        _convertProps$imgStyl = _convertProps.imgStyle,\n        imgStyle = _convertProps$imgStyl === void 0 ? {} : _convertProps$imgStyl,\n        _convertProps$placeho = _convertProps.placeholderStyle,\n        placeholderStyle = _convertProps$placeho === void 0 ? {} : _convertProps$placeho,\n        placeholderClassName = _convertProps.placeholderClassName,\n        fluid = _convertProps.fluid,\n        fixed = _convertProps.fixed,\n        backgroundColor = _convertProps.backgroundColor,\n        Tag = _convertProps.Tag,\n        itemProp = _convertProps.itemProp;\n\n    var bgColor = typeof backgroundColor === \"boolean\" ? \"lightgray\" : backgroundColor;\n    var initialDelay = \"0.25s\";\n    var imagePlaceholderStyle = (0, _extends2.default)({\n      opacity: this.state.imgLoaded ? 0 : 1,\n      transition: \"opacity 0.5s\",\n      transitionDelay: this.state.imgLoaded ? \"0.5s\" : initialDelay\n    }, imgStyle, placeholderStyle);\n    var imageStyle = (0, _extends2.default)({\n      opacity: this.state.imgLoaded || this.state.fadeIn === false ? 1 : 0,\n      transition: this.state.fadeIn === true ? \"opacity 0.5s\" : \"none\"\n    }, imgStyle);\n    var placeholderImageProps = {\n      title: title,\n      alt: !this.state.isVisible ? alt : \"\",\n      style: imagePlaceholderStyle,\n      className: placeholderClassName\n    };\n\n    if (fluid) {\n      var image = fluid;\n      return _react.default.createElement(Tag, {\n        className: (className ? className : \"\") + \" gatsby-image-wrapper\",\n        style: (0, _extends2.default)({\n          position: \"relative\",\n          overflow: \"hidden\"\n        }, style),\n        ref: this.handleRef,\n        key: \"fluid-\" + JSON.stringify(image.srcSet)\n      }, _react.default.createElement(Tag, {\n        style: {\n          width: \"100%\",\n          paddingBottom: 100 / image.aspectRatio + \"%\"\n        }\n      }), bgColor && _react.default.createElement(Tag, {\n        title: title,\n        style: {\n          backgroundColor: bgColor,\n          position: \"absolute\",\n          top: 0,\n          bottom: 0,\n          opacity: !this.state.imgLoaded ? 1 : 0,\n          transitionDelay: initialDelay,\n          right: 0,\n          left: 0\n        }\n      }), image.base64 && _react.default.createElement(Img, (0, _extends2.default)({\n        src: image.base64\n      }, placeholderImageProps)), image.tracedSVG && _react.default.createElement(Img, (0, _extends2.default)({\n        src: image.tracedSVG\n      }, placeholderImageProps)), this.state.isVisible && _react.default.createElement(\"picture\", null, image.srcSetWebp && _react.default.createElement(\"source\", {\n        type: \"image/webp\",\n        srcSet: image.srcSetWebp,\n        sizes: image.sizes\n      }), _react.default.createElement(Img, {\n        alt: alt,\n        title: title,\n        sizes: image.sizes,\n        src: image.src,\n        srcSet: image.srcSet,\n        style: imageStyle,\n        ref: this.imageRef,\n        onLoad: this.handleImageLoaded,\n        onError: this.props.onError,\n        itemProp: itemProp\n      })), this.state.hasNoScript && _react.default.createElement(\"noscript\", {\n        dangerouslySetInnerHTML: {\n          __html: noscriptImg((0, _extends2.default)({\n            alt: alt,\n            title: title\n          }, image))\n        }\n      }));\n    }\n\n    if (fixed) {\n      var _image = fixed;\n      var divStyle = (0, _extends2.default)({\n        position: \"relative\",\n        overflow: \"hidden\",\n        display: \"inline-block\",\n        width: _image.width,\n        height: _image.height\n      }, style);\n\n      if (style.display === \"inherit\") {\n        delete divStyle.display;\n      }\n\n      return _react.default.createElement(Tag, {\n        className: (className ? className : \"\") + \" gatsby-image-wrapper\",\n        style: divStyle,\n        ref: this.handleRef,\n        key: \"fixed-\" + JSON.stringify(_image.srcSet)\n      }, bgColor && _react.default.createElement(Tag, {\n        title: title,\n        style: {\n          backgroundColor: bgColor,\n          width: _image.width,\n          opacity: !this.state.imgLoaded ? 1 : 0,\n          transitionDelay: initialDelay,\n          height: _image.height\n        }\n      }), _image.base64 && _react.default.createElement(Img, (0, _extends2.default)({\n        src: _image.base64\n      }, placeholderImageProps)), _image.tracedSVG && _react.default.createElement(Img, (0, _extends2.default)({\n        src: _image.tracedSVG\n      }, placeholderImageProps)), this.state.isVisible && _react.default.createElement(\"picture\", null, _image.srcSetWebp && _react.default.createElement(\"source\", {\n        type: \"image/webp\",\n        srcSet: _image.srcSetWebp,\n        sizes: _image.sizes\n      }), _react.default.createElement(Img, {\n        alt: alt,\n        title: title,\n        width: _image.width,\n        height: _image.height,\n        sizes: _image.sizes,\n        src: _image.src,\n        srcSet: _image.srcSet,\n        style: imageStyle,\n        ref: this.imageRef,\n        onLoad: this.handleImageLoaded,\n        onError: this.props.onError,\n        itemProp: itemProp\n      })), this.state.hasNoScript && _react.default.createElement(\"noscript\", {\n        dangerouslySetInnerHTML: {\n          __html: noscriptImg((0, _extends2.default)({\n            alt: alt,\n            title: title,\n            width: _image.width,\n            height: _image.height\n          }, _image))\n        }\n      }));\n    }\n\n    return null;\n  };\n\n  return Image;\n}(_react.default.Component);\n\nImage.defaultProps = {\n  critical: false,\n  fadeIn: true,\n  alt: \"\",\n  Tag: \"div\"\n};\n\nvar fixedObject = _propTypes.default.shape({\n  width: _propTypes.default.number.isRequired,\n  height: _propTypes.default.number.isRequired,\n  src: _propTypes.default.string.isRequired,\n  srcSet: _propTypes.default.string.isRequired,\n  base64: _propTypes.default.string,\n  tracedSVG: _propTypes.default.string,\n  srcWebp: _propTypes.default.string,\n  srcSetWebp: _propTypes.default.string\n});\n\nvar fluidObject = _propTypes.default.shape({\n  aspectRatio: _propTypes.default.number.isRequired,\n  src: _propTypes.default.string.isRequired,\n  srcSet: _propTypes.default.string.isRequired,\n  sizes: _propTypes.default.string.isRequired,\n  base64: _propTypes.default.string,\n  tracedSVG: _propTypes.default.string,\n  srcWebp: _propTypes.default.string,\n  srcSetWebp: _propTypes.default.string\n});\n\nImage.propTypes = {\n  resolutions: fixedObject,\n  sizes: fluidObject,\n  fixed: fixedObject,\n  fluid: fluidObject,\n  fadeIn: _propTypes.default.bool,\n  title: _propTypes.default.string,\n  alt: _propTypes.default.string,\n  className: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object]),\n  // Support Glamor's css prop.\n  critical: _propTypes.default.bool,\n  style: _propTypes.default.object,\n  imgStyle: _propTypes.default.object,\n  placeholderStyle: _propTypes.default.object,\n  placeholderClassName: _propTypes.default.string,\n  backgroundColor: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.bool]),\n  onLoad: _propTypes.default.func,\n  onError: _propTypes.default.func,\n  onStartLoad: _propTypes.default.func,\n  Tag: _propTypes.default.string,\n  itemProp: _propTypes.default.string\n};\nvar _default = Image;\nexports.default = _default;","module.exports = require('./lib')\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.pkgName = 'gatsby-source-sanity';\nvar getGatsbyImageProps_1 = require(\"./images/getGatsbyImageProps\");\nexports.getFluidGatsbyImage = getGatsbyImageProps_1.getFluidGatsbyImage;\nexports.getFixedGatsbyImage = getGatsbyImageProps_1.getFixedGatsbyImage;\n//# sourceMappingURL=index.js.map","'use strict'\nvar __rest =\n  (this && this.__rest) ||\n  function(s, e) {\n    var t = {}\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p]\n    if (s != null && typeof Object.getOwnPropertySymbols === 'function')\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++)\n        if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]]\n    return t\n  }\nObject.defineProperty(exports, '__esModule', {value: true})\nconst parseUrl = require('url-parse')\nexports.DEFAULT_FIXED_WIDTH = 400\nexports.DEFAULT_FLUID_MAX_WIDTH = 800\nvar ImageFormat\n;(function(ImageFormat) {\n  ImageFormat['NO_CHANGE'] = ''\n  ImageFormat['WEBP'] = 'webp'\n  ImageFormat['JPG'] = 'jpg'\n  ImageFormat['PNG'] = 'png'\n})(ImageFormat || (ImageFormat = {}))\nconst idPattern = /^image-[A-Za-z0-9]+-\\d+x\\d+-[a-z]+$/\nconst sizeMultipliersFixed = [1, 1.5, 2, 3]\nconst sizeMultipliersFluid = [0.25, 0.5, 1, 1.5, 2, 3]\nfunction buildImageUrl(loc, stub) {\n  const {projectId, dataset} = loc\n  const {assetId, extension, metadata} = stub\n  const {width, height} = metadata.dimensions\n  const base = 'https://cdn.sanity.io/images'\n  return `${base}/${projectId}/${dataset}/${assetId}-${width}x${height}.${extension}`\n}\nfunction getBasicImageProps(node, loc) {\n  if (!node) {\n    return false\n  }\n  const obj = node\n  const ref = node\n  const img = node\n  let id = ''\n  if (typeof node === 'string') {\n    id = node\n  } else if (obj.asset) {\n    id = obj.asset._ref || obj.asset._id\n  } else {\n    id = ref._ref || img._id\n  }\n  const hasId = !id || idPattern.test(id)\n  if (!hasId) {\n    return false\n  }\n  const [, assetId, dimensions, extension] = id.split('-')\n  const [width, height] = dimensions.split('x').map(num => parseInt(num, 10))\n  const aspectRatio = width / height\n  const metadata = img.metadata || {dimensions: {width, height, aspectRatio}}\n  const url = img.url || buildImageUrl(loc, {url: '', assetId, extension, metadata})\n  return {\n    url,\n    assetId,\n    extension,\n    metadata,\n  }\n}\nfunction convertToFormat(url, toFormat) {\n  const parsed = parseUrl(url, true)\n  const filename = parsed.pathname.replace(/.*\\//, '')\n  const extension = filename.replace(/.*\\./, '')\n  const isConvertedToTarget = parsed.query.fm === toFormat\n  const isOriginal = extension === toFormat\n  // If the original matches the target format, remove any explicit conversions\n  if (isConvertedToTarget && isOriginal) {\n    const _a = parsed.query,\n      {fm} = _a,\n      params = __rest(_a, ['fm'])\n    parsed.set('query', params)\n    return parsed.toString()\n  }\n  if (isConvertedToTarget || isOriginal) {\n    return url\n  }\n  const newQuery = Object.assign({}, parsed.query, {fm: toFormat})\n  parsed.set('query', newQuery)\n  return parsed.toString()\n}\nfunction isWebP(url) {\n  const isConverted = url.includes('fm=webp')\n  const isOriginal = /[a-f0-9]+-\\d+x\\d+\\.webp/.test(url)\n  return isConverted || isOriginal\n}\nfunction getFixedGatsbyImage(image, args, loc) {\n  const props = getBasicImageProps(image, loc)\n  if (!props) {\n    return null\n  }\n  const width = args.width || exports.DEFAULT_FIXED_WIDTH\n  const height = args.height\n  const {url, metadata, extension} = props\n  const {dimensions, lqip} = metadata\n  let desiredAspectRatio = dimensions.aspectRatio\n  // If we're cropping, calculate the specified aspect ratio\n  if (args.height) {\n    desiredAspectRatio = width / args.height\n  }\n  let forceConvert = null\n  if (args.toFormat) {\n    forceConvert = args.toFormat\n  } else if (isWebP(props.url)) {\n    forceConvert = 'jpg'\n  }\n  const widths = sizeMultipliersFixed.map(scale => Math.round(width * scale))\n  const initial = {webp: [], base: []}\n  const srcSets = widths\n    .filter(currentWidth => currentWidth < dimensions.width)\n    .reduce((acc, currentWidth, i) => {\n      const resolution = `${sizeMultipliersFixed[i]}x`\n      const currentHeight = Math.round(currentWidth / desiredAspectRatio)\n      const imgUrl = `${url}?w=${currentWidth}&h=${currentHeight}&fit=crop`\n      const webpUrl = convertToFormat(imgUrl, 'webp')\n      const baseUrl = convertToFormat(imgUrl, forceConvert || props.extension)\n      acc.webp.push(`${webpUrl} ${resolution}`)\n      acc.base.push(`${baseUrl} ${resolution}`)\n      return acc\n    }, initial)\n  const outputHeight = Math.round(height ? height : width / desiredAspectRatio)\n  const imgUrl = `${url}?w=${width}&h=${outputHeight}&fit=crop`\n  return {\n    base64: lqip || null,\n    aspectRatio: desiredAspectRatio,\n    width: Math.round(width),\n    height: outputHeight,\n    src: convertToFormat(imgUrl, forceConvert || extension),\n    srcWebp: convertToFormat(imgUrl, 'webp'),\n    srcSet: srcSets.base.join(',\\n') || null,\n    srcSetWebp: srcSets.webp.join(',\\n') || null,\n  }\n}\nexports.getFixedGatsbyImage = getFixedGatsbyImage\nfunction getFluidGatsbyImage(image, args, loc) {\n  const props = getBasicImageProps(image, loc)\n  if (!props) {\n    return null\n  }\n  const {url, metadata, extension} = props\n  const {dimensions, lqip} = metadata\n  const maxWidth = args.maxWidth || exports.DEFAULT_FLUID_MAX_WIDTH\n  let desiredAspectRatio = dimensions.aspectRatio\n  // If we're cropping, calculate the specified aspect ratio\n  if (args.maxHeight) {\n    desiredAspectRatio = maxWidth / args.maxHeight\n  }\n  const maxHeight = args.maxHeight || Math.round(maxWidth / dimensions.aspectRatio)\n  let forceConvert = null\n  if (args.toFormat) {\n    forceConvert = args.toFormat\n  } else if (isWebP(props.url)) {\n    forceConvert = 'jpg'\n  }\n  const sizes = args.sizes || `(max-width: ${maxWidth}px) 100vw, ${maxWidth}px`\n  const widths = sizeMultipliersFluid\n    .map(scale => Math.round(maxWidth * scale))\n    .filter(width => width < dimensions.width)\n    .concat(dimensions.width)\n  const initial = {webp: [], base: []}\n  const srcSets = widths\n    .filter(currentWidth => currentWidth <= dimensions.width)\n    .reduce((acc, currentWidth) => {\n      const currentHeight = Math.round(currentWidth / desiredAspectRatio)\n      const imgUrl = `${url}?w=${currentWidth}&h=${currentHeight}&fit=crop`\n      const webpUrl = convertToFormat(imgUrl, 'webp')\n      const baseUrl = convertToFormat(imgUrl, forceConvert || props.extension)\n      acc.webp.push(`${webpUrl} ${currentWidth}w`)\n      acc.base.push(`${baseUrl} ${currentWidth}w`)\n      return acc\n    }, initial)\n  const baseSrc = `${url}?w=${maxWidth}&h=${maxHeight}&fit=crop`\n  const src = convertToFormat(baseSrc, forceConvert || extension)\n  const srcWebp = convertToFormat(baseSrc, 'webp')\n  return {\n    base64: lqip || null,\n    aspectRatio: desiredAspectRatio,\n    src,\n    srcWebp,\n    srcSet: srcSets.base.join(',\\n') || null,\n    srcSetWebp: srcSets.webp.join(',\\n') || null,\n    sizes,\n  }\n}\nexports.getFluidGatsbyImage = getFluidGatsbyImage\n//# sourceMappingURL=getGatsbyImageProps.js.map\n","'use strict';\n\nvar required = require('requires-port')\n  , qs = require('querystringify')\n  , protocolre = /^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\S\\s]*)/i\n  , slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\\/\\//;\n\n/**\n * These are the parse rules for the URL parser, it informs the parser\n * about:\n *\n * 0. The char it Needs to parse, if it's a string it should be done using\n *    indexOf, RegExp using exec and NaN means set as current value.\n * 1. The property we should set when parsing this value.\n * 2. Indication if it's backwards or forward parsing, when set as number it's\n *    the value of extra chars that should be split off.\n * 3. Inherit from location if non existing in the parser.\n * 4. `toLowerCase` the resulting value.\n */\nvar rules = [\n  ['#', 'hash'],                        // Extract from the back.\n  ['?', 'query'],                       // Extract from the back.\n  function sanitize(address) {          // Sanitize what is left of the address\n    return address.replace('\\\\', '/');\n  },\n  ['/', 'pathname'],                    // Extract from the back.\n  ['@', 'auth', 1],                     // Extract from the front.\n  [NaN, 'host', undefined, 1, 1],       // Set left over value.\n  [/:(\\d+)$/, 'port', undefined, 1],    // RegExp the back.\n  [NaN, 'hostname', undefined, 1, 1]    // Set left over.\n];\n\n/**\n * These properties should not be copied or inherited from. This is only needed\n * for all non blob URL's as a blob URL does not include a hash, only the\n * origin.\n *\n * @type {Object}\n * @private\n */\nvar ignore = { hash: 1, query: 1 };\n\n/**\n * The location object differs when your code is loaded through a normal page,\n * Worker or through a worker using a blob. And with the blobble begins the\n * trouble as the location object will contain the URL of the blob, not the\n * location of the page where our code is loaded in. The actual origin is\n * encoded in the `pathname` so we can thankfully generate a good \"default\"\n * location from it so we can generate proper relative URL's again.\n *\n * @param {Object|String} loc Optional default location object.\n * @returns {Object} lolcation object.\n * @public\n */\nfunction lolcation(loc) {\n  var globalVar;\n\n  if (typeof window !== 'undefined') globalVar = window;\n  else if (typeof global !== 'undefined') globalVar = global;\n  else if (typeof self !== 'undefined') globalVar = self;\n  else globalVar = {};\n\n  var location = globalVar.location || {};\n  loc = loc || location;\n\n  var finaldestination = {}\n    , type = typeof loc\n    , key;\n\n  if ('blob:' === loc.protocol) {\n    finaldestination = new Url(unescape(loc.pathname), {});\n  } else if ('string' === type) {\n    finaldestination = new Url(loc, {});\n    for (key in ignore) delete finaldestination[key];\n  } else if ('object' === type) {\n    for (key in loc) {\n      if (key in ignore) continue;\n      finaldestination[key] = loc[key];\n    }\n\n    if (finaldestination.slashes === undefined) {\n      finaldestination.slashes = slashes.test(loc.href);\n    }\n  }\n\n  return finaldestination;\n}\n\n/**\n * @typedef ProtocolExtract\n * @type Object\n * @property {String} protocol Protocol matched in the URL, in lowercase.\n * @property {Boolean} slashes `true` if protocol is followed by \"//\", else `false`.\n * @property {String} rest Rest of the URL that is not part of the protocol.\n */\n\n/**\n * Extract protocol information from a URL with/without double slash (\"//\").\n *\n * @param {String} address URL we want to extract from.\n * @return {ProtocolExtract} Extracted information.\n * @private\n */\nfunction extractProtocol(address) {\n  var match = protocolre.exec(address);\n\n  return {\n    protocol: match[1] ? match[1].toLowerCase() : '',\n    slashes: !!match[2],\n    rest: match[3]\n  };\n}\n\n/**\n * Resolve a relative URL pathname against a base URL pathname.\n *\n * @param {String} relative Pathname of the relative URL.\n * @param {String} base Pathname of the base URL.\n * @return {String} Resolved pathname.\n * @private\n */\nfunction resolve(relative, base) {\n  var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/'))\n    , i = path.length\n    , last = path[i - 1]\n    , unshift = false\n    , up = 0;\n\n  while (i--) {\n    if (path[i] === '.') {\n      path.splice(i, 1);\n    } else if (path[i] === '..') {\n      path.splice(i, 1);\n      up++;\n    } else if (up) {\n      if (i === 0) unshift = true;\n      path.splice(i, 1);\n      up--;\n    }\n  }\n\n  if (unshift) path.unshift('');\n  if (last === '.' || last === '..') path.push('');\n\n  return path.join('/');\n}\n\n/**\n * The actual URL instance. Instead of returning an object we've opted-in to\n * create an actual constructor as it's much more memory efficient and\n * faster and it pleases my OCD.\n *\n * It is worth noting that we should not use `URL` as class name to prevent\n * clashes with the global URL instance that got introduced in browsers.\n *\n * @constructor\n * @param {String} address URL we want to parse.\n * @param {Object|String} [location] Location defaults for relative paths.\n * @param {Boolean|Function} [parser] Parser for the query string.\n * @private\n */\nfunction Url(address, location, parser) {\n  if (!(this instanceof Url)) {\n    return new Url(address, location, parser);\n  }\n\n  var relative, extracted, parse, instruction, index, key\n    , instructions = rules.slice()\n    , type = typeof location\n    , url = this\n    , i = 0;\n\n  //\n  // The following if statements allows this module two have compatibility with\n  // 2 different API:\n  //\n  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments\n  //    where the boolean indicates that the query string should also be parsed.\n  //\n  // 2. The `URL` interface of the browser which accepts a URL, object as\n  //    arguments. The supplied object will be used as default values / fall-back\n  //    for relative paths.\n  //\n  if ('object' !== type && 'string' !== type) {\n    parser = location;\n    location = null;\n  }\n\n  if (parser && 'function' !== typeof parser) parser = qs.parse;\n\n  location = lolcation(location);\n\n  //\n  // Extract protocol information before running the instructions.\n  //\n  extracted = extractProtocol(address || '');\n  relative = !extracted.protocol && !extracted.slashes;\n  url.slashes = extracted.slashes || relative && location.slashes;\n  url.protocol = extracted.protocol || location.protocol || '';\n  address = extracted.rest;\n\n  //\n  // When the authority component is absent the URL starts with a path\n  // component.\n  //\n  if (!extracted.slashes) instructions[3] = [/(.*)/, 'pathname'];\n\n  for (; i < instructions.length; i++) {\n    instruction = instructions[i];\n\n    if (typeof instruction === 'function') {\n      address = instruction(address);\n      continue;\n    }\n\n    parse = instruction[0];\n    key = instruction[1];\n\n    if (parse !== parse) {\n      url[key] = address;\n    } else if ('string' === typeof parse) {\n      if (~(index = address.indexOf(parse))) {\n        if ('number' === typeof instruction[2]) {\n          url[key] = address.slice(0, index);\n          address = address.slice(index + instruction[2]);\n        } else {\n          url[key] = address.slice(index);\n          address = address.slice(0, index);\n        }\n      }\n    } else if ((index = parse.exec(address))) {\n      url[key] = index[1];\n      address = address.slice(0, index.index);\n    }\n\n    url[key] = url[key] || (\n      relative && instruction[3] ? location[key] || '' : ''\n    );\n\n    //\n    // Hostname, host and protocol should be lowercased so they can be used to\n    // create a proper `origin`.\n    //\n    if (instruction[4]) url[key] = url[key].toLowerCase();\n  }\n\n  //\n  // Also parse the supplied query string in to an object. If we're supplied\n  // with a custom parser as function use that instead of the default build-in\n  // parser.\n  //\n  if (parser) url.query = parser(url.query);\n\n  //\n  // If the URL is relative, resolve the pathname against the base URL.\n  //\n  if (\n      relative\n    && location.slashes\n    && url.pathname.charAt(0) !== '/'\n    && (url.pathname !== '' || location.pathname !== '')\n  ) {\n    url.pathname = resolve(url.pathname, location.pathname);\n  }\n\n  //\n  // We should not add port numbers if they are already the default port number\n  // for a given protocol. As the host also contains the port number we're going\n  // override it with the hostname which contains no port number.\n  //\n  if (!required(url.port, url.protocol)) {\n    url.host = url.hostname;\n    url.port = '';\n  }\n\n  //\n  // Parse down the `auth` for the username and password.\n  //\n  url.username = url.password = '';\n  if (url.auth) {\n    instruction = url.auth.split(':');\n    url.username = instruction[0] || '';\n    url.password = instruction[1] || '';\n  }\n\n  url.origin = url.protocol && url.host && url.protocol !== 'file:'\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  //\n  // The href is just the compiled result.\n  //\n  url.href = url.toString();\n}\n\n/**\n * This is convenience method for changing properties in the URL instance to\n * insure that they all propagate correctly.\n *\n * @param {String} part          Property we need to adjust.\n * @param {Mixed} value          The newly assigned value.\n * @param {Boolean|Function} fn  When setting the query, it will be the function\n *                               used to parse the query.\n *                               When setting the protocol, double slash will be\n *                               removed from the final url if it is true.\n * @returns {URL} URL instance for chaining.\n * @public\n */\nfunction set(part, value, fn) {\n  var url = this;\n\n  switch (part) {\n    case 'query':\n      if ('string' === typeof value && value.length) {\n        value = (fn || qs.parse)(value);\n      }\n\n      url[part] = value;\n      break;\n\n    case 'port':\n      url[part] = value;\n\n      if (!required(value, url.protocol)) {\n        url.host = url.hostname;\n        url[part] = '';\n      } else if (value) {\n        url.host = url.hostname +':'+ value;\n      }\n\n      break;\n\n    case 'hostname':\n      url[part] = value;\n\n      if (url.port) value += ':'+ url.port;\n      url.host = value;\n      break;\n\n    case 'host':\n      url[part] = value;\n\n      if (/:\\d+$/.test(value)) {\n        value = value.split(':');\n        url.port = value.pop();\n        url.hostname = value.join(':');\n      } else {\n        url.hostname = value;\n        url.port = '';\n      }\n\n      break;\n\n    case 'protocol':\n      url.protocol = value.toLowerCase();\n      url.slashes = !fn;\n      break;\n\n    case 'pathname':\n    case 'hash':\n      if (value) {\n        var char = part === 'pathname' ? '/' : '#';\n        url[part] = value.charAt(0) !== char ? char + value : value;\n      } else {\n        url[part] = value;\n      }\n      break;\n\n    default:\n      url[part] = value;\n  }\n\n  for (var i = 0; i < rules.length; i++) {\n    var ins = rules[i];\n\n    if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();\n  }\n\n  url.origin = url.protocol && url.host && url.protocol !== 'file:'\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  url.href = url.toString();\n\n  return url;\n}\n\n/**\n * Transform the properties back in to a valid and full URL string.\n *\n * @param {Function} stringify Optional query stringify function.\n * @returns {String} Compiled version of the URL.\n * @public\n */\nfunction toString(stringify) {\n  if (!stringify || 'function' !== typeof stringify) stringify = qs.stringify;\n\n  var query\n    , url = this\n    , protocol = url.protocol;\n\n  if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';\n\n  var result = protocol + (url.slashes ? '//' : '');\n\n  if (url.username) {\n    result += url.username;\n    if (url.password) result += ':'+ url.password;\n    result += '@';\n  }\n\n  result += url.host + url.pathname;\n\n  query = 'object' === typeof url.query ? stringify(url.query) : url.query;\n  if (query) result += '?' !== query.charAt(0) ? '?'+ query : query;\n\n  if (url.hash) result += url.hash;\n\n  return result;\n}\n\nUrl.prototype = { set: set, toString: toString };\n\n//\n// Expose the URL parser and some additional properties that might be useful for\n// others or testing.\n//\nUrl.extractProtocol = extractProtocol;\nUrl.location = lolcation;\nUrl.qs = qs;\n\nmodule.exports = Url;\n","'use strict';\n\n/**\n * Check if we're required to add a port number.\n *\n * @see https://url.spec.whatwg.org/#default-port\n * @param {Number|String} port Port number we need to check\n * @param {String} protocol Protocol we need to check against.\n * @returns {Boolean} Is it a default port for the given protocol\n * @api private\n */\nmodule.exports = function required(port, protocol) {\n  protocol = protocol.split(':')[0];\n  port = +port;\n\n  if (!port) return false;\n\n  switch (protocol) {\n    case 'http':\n    case 'ws':\n    return port !== 80;\n\n    case 'https':\n    case 'wss':\n    return port !== 443;\n\n    case 'ftp':\n    return port !== 21;\n\n    case 'gopher':\n    return port !== 70;\n\n    case 'file':\n    return false;\n  }\n\n  return port !== 0;\n};\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , undef;\n\n/**\n * Decode a URI encoded string.\n *\n * @param {String} input The URI encoded string.\n * @returns {String} The decoded string.\n * @api private\n */\nfunction decode(input) {\n  return decodeURIComponent(input.replace(/\\+/g, ' '));\n}\n\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\nfunction querystring(query) {\n  var parser = /([^=?&]+)=?([^&]*)/g\n    , result = {}\n    , part;\n\n  while (part = parser.exec(query)) {\n    var key = decode(part[1])\n      , value = decode(part[2]);\n\n    //\n    // Prevent overriding of existing properties. This ensures that build-in\n    // methods like `toString` or __proto__ are not overriden by malicious\n    // querystrings.\n    //\n    if (key in result) continue;\n    result[key] = value;\n  }\n\n  return result;\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nfunction querystringify(obj, prefix) {\n  prefix = prefix || '';\n\n  var pairs = []\n    , value\n    , key;\n\n  //\n  // Optionally prefix with a '?' if needed\n  //\n  if ('string' !== typeof prefix) prefix = '?';\n\n  for (key in obj) {\n    if (has.call(obj, key)) {\n      value = obj[key];\n\n      //\n      // Edge cases where we actually want to encode the value to an empty\n      // string instead of the stringified value.\n      //\n      if (!value && (value === null || value === undef || isNaN(value))) {\n        value = '';\n      }\n\n      pairs.push(encodeURIComponent(key) +'='+ encodeURIComponent(value));\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : '';\n}\n\n//\n// Expose the module.\n//\nexports.stringify = querystringify;\nexports.parse = querystring;\n"],"sourceRoot":""}