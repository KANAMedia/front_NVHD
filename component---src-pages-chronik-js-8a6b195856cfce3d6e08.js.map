{"version":3,"sources":["webpack:///./src/pages/chronik.js","webpack:///./src/components/seo.js","webpack:///./src/components/block-content/index.js","webpack:///./src/components/block-content/typography.module.scss","webpack:///./src/components/block-content/image.module.scss","webpack:///./src/pages/chronik.module.scss"],"names":["query","chronikPage","_ref","data","props","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0___default","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","styles","_components_layout__WEBPACK_IMPORTED_MODULE_2__","currentPath","location","pathname","_components_seo__WEBPACK_IMPORTED_MODULE_3__","title","keywords","heading","text","_components_block_content__WEBPACK_IMPORTED_MODULE_4__","blocks","page","edges","node","_rawText","SEO","description","lang","meta","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","render","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired","_sanity_block_content_to_react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_sanity_block_content_to_react__WEBPACK_IMPORTED_MODULE_0___default","n","react__WEBPACK_IMPORTED_MODULE_1__","_typography_module_scss__WEBPACK_IMPORTED_MODULE_2__","_typography_module_scss__WEBPACK_IMPORTED_MODULE_2___default","_image_module_scss__WEBPACK_IMPORTED_MODULE_3__","_image_module_scss__WEBPACK_IMPORTED_MODULE_3___default","gatsby_source_sanity__WEBPACK_IMPORTED_MODULE_4__","gatsby_image__WEBPACK_IMPORTED_MODULE_5__","gatsby_image__WEBPACK_IMPORTED_MODULE_5___default","sanityConfig","projectId","dataset","serializers","types","block","style","typography","responsiveTitle1","children","responsiveTitle2","responsiveTitle3","responsiveTitle4","blockQuote","paragraph","image","asset","fluidProps","getFluidGatsbyImage","maxWidth","fluid","imageStyle","imageWrapper","BlockContent","module","exports","title1","title2","title3","large","base","small","micro"],"mappings":"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","file":"component---src-pages-chronik-js-8a6b195856cfce3d6e08.js","sourcesContent":["import React from 'react'\r\n\r\nimport { graphql } from 'gatsby'\r\nimport Layout from '../components/layout'\r\nimport SEO from '../components/seo'\r\nimport BlockContent from '../components/block-content'\r\nimport styles from './chronik.module.scss'\r\n\r\nexport const query = graphql`\r\n  query chronikPageQuery {\r\n    page: allSanityChronik {\r\n      edges {\r\n        node {\r\n          id\r\n          title\r\n          _rawText\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst chronikPage = ({ data, ...props }) => {\r\n  return (\r\n    <section className={styles.chronikPage}>\r\n      <Layout currentPath={props.location.pathname}>\r\n        <SEO title=\"Chronik\" keywords={[`Chronik`, `Geschichte`, `GrÃ¼ndung`]} />\r\n        <h2 className={styles.heading}>\r\n          Unsere <br />\r\n          <span>Geschichte</span>\r\n        </h2>\r\n        <div className={styles.text}>\r\n          <BlockContent blocks={data.page.edges[0].node._rawText} />\r\n        </div>\r\n      </Layout>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default chronikPage\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  return (\r\n    <StaticQuery\r\n      query={detailsQuery}\r\n      render={data => {\r\n        const metaDescription =\r\n          description || data.site.siteMetadata.description\r\n        return (\r\n          <Helmet\r\n            htmlAttributes={{\r\n              lang,\r\n            }}\r\n            title={title}\r\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\r\n            meta={[\r\n              {\r\n                name: `description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                property: `og:description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:type`,\r\n                content: `website`,\r\n              },\r\n              {\r\n                name: `twitter:card`,\r\n                content: `summary`,\r\n              },\r\n              {\r\n                name: `twitter:creator`,\r\n                content: data.site.siteMetadata.author,\r\n              },\r\n              {\r\n                name: `twitter:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                name: `twitter:description`,\r\n                content: metaDescription,\r\n              },\r\n            ]\r\n              .concat(\r\n                keywords.length > 0\r\n                  ? {\r\n                      name: `keywords`,\r\n                      content: keywords.join(`, `),\r\n                    }\r\n                  : []\r\n              )\r\n              .concat(meta)}\r\n          />\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n\r\nconst detailsQuery = graphql`\r\n  query DefaultSEOQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        author\r\n      }\r\n    }\r\n  }\r\n`\r\n","import BaseBlockContent from '@sanity/block-content-to-react'\r\nimport React from 'react'\r\nimport typography from './typography.module.scss'\r\nimport imageStyle from './image.module.scss'\r\nimport { getFluidGatsbyImage } from 'gatsby-source-sanity'\r\nimport Img from 'gatsby-image'\r\n\r\nconst sanityConfig = { projectId: '74ftimmm', dataset: 'production' }\r\n\r\nconst serializers = {\r\n  types: {\r\n    block(props) {\r\n      switch (props.node.style) {\r\n        case 'h1':\r\n          return (\r\n            <h1 className={typography.responsiveTitle1}>{props.children}</h1>\r\n          )\r\n\r\n        case 'h2':\r\n          return (\r\n            <h2 className={typography.responsiveTitle2}>{props.children}</h2>\r\n          )\r\n\r\n        case 'h3':\r\n          return (\r\n            <h3 className={typography.responsiveTitle3}>{props.children}</h3>\r\n          )\r\n\r\n        case 'h4':\r\n          return (\r\n            <h4 className={typography.responsiveTitle4}>{props.children}</h4>\r\n          )\r\n\r\n        case 'blockquote':\r\n          return (\r\n            <blockquote className={typography.blockQuote}>\r\n              {props.children}\r\n            </blockquote>\r\n          )\r\n\r\n        default:\r\n          return <p className={typography.paragraph}>{props.children}</p>\r\n      }\r\n    },\r\n    image(data) {\r\n      if (data.node.asset._ref) {\r\n        const fluidProps = getFluidGatsbyImage(\r\n          data.node.asset._ref,\r\n          { maxWidth: 400 },\r\n          sanityConfig\r\n        )\r\n        return <Img fluid={fluidProps} className={imageStyle.imageWrapper} />\r\n      }\r\n      return ''\r\n    },\r\n  },\r\n}\r\n\r\nconst BlockContent = ({ blocks }) => (\r\n  <BaseBlockContent\r\n    blocks={blocks}\r\n    serializers={serializers}\r\n    projectId={`74ftimmm`}\r\n    dataset={`production`}\r\n  />\r\n)\r\n\r\nexport default BlockContent\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title1\":\"typography-module--title1--2TQkm\",\"title2\":\"typography-module--title2--2dYBj\",\"title3\":\"typography-module--title3--EU4pg\",\"large\":\"typography-module--large--2Gk5J\",\"base\":\"typography-module--base--gwQPS\",\"small\":\"typography-module--small--18pR7\",\"micro\":\"typography-module--micro--1kMgn\",\"paragraph\":\"typography-module--paragraph--2YXM4\",\"blockQuote\":\"typography-module--blockQuote--WRfYu\",\"responsiveTitle1\":\"typography-module--responsiveTitle1--2i1e_\",\"responsiveTitle2\":\"typography-module--responsiveTitle2--LZOBB\",\"responsiveTitle3\":\"typography-module--responsiveTitle3--2Jvre\",\"responsiveTitle4\":\"typography-module--responsiveTitle4--BIfgq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageWrapper\":\"image-module--imageWrapper--3t9P9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chronikPage\":\"chronik-module--chronikPage--3PQEa\",\"heading\":\"chronik-module--heading--1BmMV\",\"text\":\"chronik-module--text--UKi-0\"};"],"sourceRoot":""}