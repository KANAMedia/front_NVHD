{"version":3,"sources":["webpack:///./src/pages/datenschutz.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","datenschutzPage","_ref","data","console","log","a","createElement","title","keywords","page","edges","node","text","map","children","key","_key","src","asset","path","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","render","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAMaI,EAAK,YA8CHM,UA1BS,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KAGzB,OAFAC,QAAQC,IAAIF,GAGVN,EAAAS,EAAAC,cAACR,EAAA,EAAD,KACEF,EAAAS,EAAAC,cAACP,EAAA,EAAD,CAAKQ,MAAM,UAAUC,SAAU,kBAC/BZ,EAAAS,EAAAC,cAAA,yBAEAV,EAAAS,EAAAC,cAAA,WACGJ,EAAKO,KAAKC,MAAM,GAAGC,KAAKC,KAAKC,IAAI,SAAAD,GAChC,OAAIA,EAAKE,SACAlB,EAAAS,EAAAC,cAAA,KAAGS,IAAKH,EAAKI,MAAOJ,EAAKE,SAAS,GAAGF,MAG1ChB,EAAAS,EAAAC,cAAA,OACEW,IAAG,yBAA2BL,EAAKM,MAAMC,KACzCJ,IAAKH,EAAKI,sHCrC1B,SAASI,EAATnB,GAA2D,IAA5CoB,EAA4CpB,EAA5CoB,YAAaC,EAA+BrB,EAA/BqB,KAAMC,EAAyBtB,EAAzBsB,KAAMf,EAAmBP,EAAnBO,SAAUD,EAASN,EAATM,MAChD,OACEiB,EAAAnB,EAAAC,cAACmB,EAAA,YAAD,CACE/B,MAAOgC,EACPC,OAAQ,SAAAzB,GACN,IAAM0B,EACJP,GAAenB,EAAK2B,KAAKC,aAAaT,YACxC,OACEG,EAAAnB,EAAAC,cAACyB,EAAA1B,EAAD,CACE2B,eAAgB,CACdV,QAEFf,MAAOA,EACP0B,cAAa,QAAU/B,EAAK2B,KAAKC,aAAavB,MAC9CgB,KAAM,CACJ,CACEW,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAAS5B,GAEX,CACE6B,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASjC,EAAK2B,KAAKC,aAAaO,QAElC,CACEH,KAAI,gBACJC,QAAS5B,GAEX,CACE2B,KAAI,sBACJC,QAASP,IAGVU,OACC9B,EAAS+B,OAAS,EACd,CACEL,KAAI,WACJC,QAAS3B,EAASgC,KAAT,OAEX,IAELF,OAAOf,MAtDlBrB,KAAAuC,IA8DJrB,EAAIsB,aAAe,CACjBpB,KAAI,KACJC,KAAM,GACNf,SAAU,IAGZY,EAAIuB,UAAY,CACdtB,YAAauB,IAAUC,OACvBvB,KAAMsB,IAAUC,OAChBtB,KAAMqB,IAAUE,MAChBtC,SAAUoC,IAAUG,QAAQH,IAAUC,QACtCtC,MAAOqC,IAAUC,OAAOG,YAGX5B,MAEf,IAAMM,EAAY","file":"component---src-pages-datenschutz-js-1a3b70de4fc7c1881fe7.js","sourcesContent":["import React from 'react'\r\n\r\nimport { graphql } from 'gatsby'\r\nimport Layout from '../components/layout'\r\nimport SEO from '../components/seo'\r\n\r\nexport const query = graphql`\r\n  query dateschutzPageQuery {\r\n    page: allSanityDatenschutz {\r\n      edges {\r\n        node {\r\n          id\r\n          title\r\n          text {\r\n            _key\r\n            children {\r\n              _key\r\n              text\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst datenschutzPage = ({ data }) => {\r\n  console.log(data)\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Figuren\" keywords={[`Datenschutz`]} />\r\n      <h2>Datenschutz</h2>\r\n\r\n      <div>\r\n        {data.page.edges[0].node.text.map(text => {\r\n          if (text.children) {\r\n            return <p key={text._key}>{text.children[0].text}</p>\r\n          } else {\r\n            return (\r\n              <img\r\n                src={`https://cdn.sanity.io/${text.asset.path}`}\r\n                key={text._key}\r\n              />\r\n            )\r\n          }\r\n        })}\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default datenschutzPage\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  return (\r\n    <StaticQuery\r\n      query={detailsQuery}\r\n      render={data => {\r\n        const metaDescription =\r\n          description || data.site.siteMetadata.description\r\n        return (\r\n          <Helmet\r\n            htmlAttributes={{\r\n              lang,\r\n            }}\r\n            title={title}\r\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\r\n            meta={[\r\n              {\r\n                name: `description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                property: `og:description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:type`,\r\n                content: `website`,\r\n              },\r\n              {\r\n                name: `twitter:card`,\r\n                content: `summary`,\r\n              },\r\n              {\r\n                name: `twitter:creator`,\r\n                content: data.site.siteMetadata.author,\r\n              },\r\n              {\r\n                name: `twitter:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                name: `twitter:description`,\r\n                content: metaDescription,\r\n              },\r\n            ]\r\n              .concat(\r\n                keywords.length > 0\r\n                  ? {\r\n                      name: `keywords`,\r\n                      content: keywords.join(`, `),\r\n                    }\r\n                  : []\r\n              )\r\n              .concat(meta)}\r\n          />\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n\r\nconst detailsQuery = graphql`\r\n  query DefaultSEOQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        author\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}