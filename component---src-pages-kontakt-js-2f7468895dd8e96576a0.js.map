{"version":3,"sources":["webpack:///./src/pages/kontakt.js","webpack:///./src/components/seo.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./src/pages/kontakt.module.scss"],"names":["query","kontaktPage","_ref","data","props","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","currentHref","location","href","className","styles","pageKontakt","_components_seo__WEBPACK_IMPORTED_MODULE_4__","title","keywords","schriftfuehrer","edges","node","name","adresse","strassehausnummer","president","postleizahl","ort","telefon","email","kassierer","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","render","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired","dP","__webpack_require__","f","FProto","Function","prototype","nameRE","configurable","get","this","match","e","module","exports"],"mappings":"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","file":"component---src-pages-kontakt-js-2f7468895dd8e96576a0.js","sourcesContent":["import React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport Layout from '../components/layout'\r\nimport SEO from '../components/seo'\r\nimport styles from './kontakt.module.scss'\r\n\r\nexport const query = graphql`\r\n  query kontaktPageQuery {\r\n    schriftfuehrer: allSanityPerson(\r\n      filter: { rollen: { eq: \"schriftf체hrer\" } }\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          name\r\n          rollen\r\n          email\r\n          adresse {\r\n            strassehausnummer\r\n            postleizahl\r\n            ort\r\n          }\r\n        }\r\n      }\r\n    }\r\n    president: allSanityPerson(filter: { rollen: { eq: \"president\" } }) {\r\n      edges {\r\n        node {\r\n          id\r\n          name\r\n          rollen\r\n          email\r\n          telefon\r\n          adresse {\r\n            strassehausnummer\r\n            postleizahl\r\n            ort\r\n          }\r\n        }\r\n      }\r\n    }\r\n    kassierer: allSanityPerson(filter: { rollen: { eq: \"kassierer\" } }) {\r\n      edges {\r\n        node {\r\n          id\r\n          name\r\n          rollen\r\n          email\r\n          adresse {\r\n            strassehausnummer\r\n            postleizahl\r\n            ort\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst kontaktPage = ({ data, ...props }) => {\r\n  return (\r\n    <Layout currentHref={props.location.href}>\r\n      <section className={styles.pageKontakt}>\r\n        <SEO\r\n          title=\"Kontakt\"\r\n          keywords={[\r\n            `Kontakt`,\r\n            `Info`,\r\n            `Information`,\r\n            `Pr채sident`,\r\n            `Postadresse`,\r\n          ]}\r\n        />\r\n        <h2>\r\n          dein <br />\r\n          <span>Kontakt</span>\r\n        </h2>\r\n\r\n        <div>\r\n          <h3>Postadresse</h3>\r\n          <p>Narrenverein 'Heuliecher' Heudorf e.v.</p>\r\n          <p>Schriftf체hrer {data.schriftfuehrer.edges[0].node.name}</p>\r\n          <p> {data.schriftfuehrer.edges[0].node.adresse.strassehausnummer}</p>\r\n        </div>\r\n\r\n        <div>\r\n          <h3>Pr채sident</h3>\r\n          <p>{data.president.edges[0].node.name}</p>\r\n          <p> {data.president.edges[0].node.adresse.strassehausnummer}</p>\r\n          <p>\r\n            {' '}\r\n            {data.president.edges[0].node.adresse.postleizahl}{' '}\r\n            {data.president.edges[0].node.adresse.ort}\r\n          </p>\r\n          <p>{data.president.edges[0].node.telefon}</p>\r\n          <a href={`mailto:${data.president.edges[0].node.email}`}>\r\n            {data.president.edges[0].node.email}\r\n          </a>\r\n        </div>\r\n\r\n        <div>\r\n          <h3>Kassier</h3>\r\n          <p>{data.kassierer.edges[0].node.name}</p>\r\n          <a href={`mailto:${data.kassierer.edges[0].node.email}`}>\r\n            {data.kassierer.edges[0].node.email}\r\n          </a>\r\n        </div>\r\n      </section>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default kontaktPage\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  return (\r\n    <StaticQuery\r\n      query={detailsQuery}\r\n      render={data => {\r\n        const metaDescription =\r\n          description || data.site.siteMetadata.description\r\n        return (\r\n          <Helmet\r\n            htmlAttributes={{\r\n              lang,\r\n            }}\r\n            title={title}\r\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\r\n            meta={[\r\n              {\r\n                name: `description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                property: `og:description`,\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: `og:type`,\r\n                content: `website`,\r\n              },\r\n              {\r\n                name: `twitter:card`,\r\n                content: `summary`,\r\n              },\r\n              {\r\n                name: `twitter:creator`,\r\n                content: data.site.siteMetadata.author,\r\n              },\r\n              {\r\n                name: `twitter:title`,\r\n                content: title,\r\n              },\r\n              {\r\n                name: `twitter:description`,\r\n                content: metaDescription,\r\n              },\r\n            ]\r\n              .concat(\r\n                keywords.length > 0\r\n                  ? {\r\n                      name: `keywords`,\r\n                      content: keywords.join(`, `),\r\n                    }\r\n                  : []\r\n              )\r\n              .concat(meta)}\r\n          />\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  keywords: [],\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n\r\nconst detailsQuery = graphql`\r\n  query DefaultSEOQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        author\r\n      }\r\n    }\r\n  }\r\n`\r\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageKontakt\":\"kontakt-module--pageKontakt--3Wcvq\"};"],"sourceRoot":""}